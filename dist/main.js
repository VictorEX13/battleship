(()=>{"use strict";var r={756:(r,e,n)=>{n.d(e,{Z:()=>u});var t=n(537),o=n.n(t),a=n(645),i=n.n(a),s=n(667),d=n.n(s),c=new URL(n(172),n.b),l=i()(o()),A=d()(c);l.push([r.id,"/* General Rules */\r\n\r\n@font-face {\r\n    font-family: 'PressStart2P';\r\n    src: url("+A+') format(\'truetype\');\r\n}\r\n\r\n*,\r\n*::before,\r\n*::after {\r\n    box-sizing: border-box;\r\n\r\n    font-family: \'PressStart2P\';\r\n\r\n    padding: 0;\r\n    margin: 0;\r\n}\r\n\r\n:root {\r\n    font-size: 10px;\r\n    --main-color: rgb(0, 27, 177);\r\n    --sub-color: rgb(100, 100, 100);\r\n}\r\n\r\nh1 {\r\n    font-size: 3rem;\r\n}\r\n\r\n/* Blocks */\r\n\r\nbody {\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    height: 100vh;\r\n    width: 100vw;\r\n}\r\n\r\nheader {\r\n    display: flex;\r\n    align-items: center;\r\n    flex: 1;\r\n\r\n    color: var(--main-color);\r\n    background-color: var(--sub-color);\r\n\r\n    padding: 0 2%;\r\n}\r\n\r\nmain {\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex: 8.5;\r\n\r\n    background-color: rgb(29, 29, 29);\r\n}\r\n\r\n    .main-display {\r\n        display: flex;\r\n        justify-content: space-around;\r\n        align-items: center;\r\n        flex: 8.5;\r\n\r\n        padding: 7.5% 0;\r\n    }\r\n\r\n    .controller {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        flex: 1.5;\r\n    }\r\n\r\nfooter {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex: 0.5;\r\n\r\n    color: var(--main-color);\r\n    background-color: var(--sub-color);\r\n}\r\n\r\n/* Elements */\r\n\r\n.board {\r\n    display: grid;\r\n    grid-template: repeat(10,1fr) / repeat(10,1fr);\r\n\r\n    height: 100%;\r\n    aspect-ratio: 1/1;\r\n}\r\n\r\n.board-field {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    font-size: 2.4rem;\r\n\r\n    background-color: rgb(9, 145, 199);\r\n\r\n    border: 1px solid var(--main-color);\r\n}\r\n\r\nbutton {\r\n    padding: 1.5rem;\r\n}\r\n\r\n/* Modifiers */\r\n\r\n.board:not(.board[under-attack]),\r\n.board-field[hit="true"] {\r\n    pointer-events: none;\r\n}\r\n\r\n.board-field[hit="true"][has-ship="false"]::after {\r\n    content: \'x\';\r\n}\r\n\r\n.board-field[hit="true"][has-ship="true"] {\r\n    background-color: rgb(170, 0, 0);\r\n}\r\n\r\n.player-board .board-field[hit="false"][has-ship="true"],\r\n.config-board .board-field[has-ship="true"] {\r\n    background-color: rgb(0, 237, 103);\r\n}\r\n\r\n.comp-board .board-field[hit="false"]:hover {\r\n    cursor: crosshair;\r\n}\r\n\r\n.board:not(.board[under-attack]),\r\n.comp-board .board-field[hit="false"]:hover,\r\nbutton:not(button[disabled]):hover {\r\n    opacity: 0.7;\r\n}\r\n\r\n.winning-message {\r\n    font-size: 3rem;\r\n\r\n    color: white;\r\n}',"",{version:3,sources:["webpack://./src/styles/main.css"],names:[],mappings:"AAAA,kBAAkB;;AAElB;IACI,2BAA2B;IAC3B,+DAAmE;AACvE;;AAEA;;;IAGI,sBAAsB;;IAEtB,2BAA2B;;IAE3B,UAAU;IACV,SAAS;AACb;;AAEA;IACI,eAAe;IACf,6BAA6B;IAC7B,+BAA+B;AACnC;;AAEA;IACI,eAAe;AACnB;;AAEA,WAAW;;AAEX;IACI,aAAa;IACb,sBAAsB;;IAEtB,aAAa;IACb,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,OAAO;;IAEP,wBAAwB;IACxB,kCAAkC;;IAElC,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;;IAET,iCAAiC;AACrC;;IAEI;QACI,aAAa;QACb,6BAA6B;QAC7B,mBAAmB;QACnB,SAAS;;QAET,eAAe;IACnB;;IAEA;QACI,aAAa;QACb,uBAAuB;QACvB,mBAAmB;QACnB,SAAS;IACb;;AAEJ;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,SAAS;;IAET,wBAAwB;IACxB,kCAAkC;AACtC;;AAEA,aAAa;;AAEb;IACI,aAAa;IACb,8CAA8C;;IAE9C,YAAY;IACZ,iBAAiB;AACrB;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;;IAEnB,iBAAiB;;IAEjB,kCAAkC;;IAElC,mCAAmC;AACvC;;AAEA;IACI,eAAe;AACnB;;AAEA,cAAc;;AAEd;;IAEI,oBAAoB;AACxB;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,gCAAgC;AACpC;;AAEA;;IAEI,kCAAkC;AACtC;;AAEA;IACI,iBAAiB;AACrB;;AAEA;;;IAGI,YAAY;AAChB;;AAEA;IACI,eAAe;;IAEf,YAAY;AAChB",sourcesContent:['/* General Rules */\r\n\r\n@font-face {\r\n    font-family: \'PressStart2P\';\r\n    src: url(\'./../assets/PressStart2P-Regular.ttf\') format(\'truetype\');\r\n}\r\n\r\n*,\r\n*::before,\r\n*::after {\r\n    box-sizing: border-box;\r\n\r\n    font-family: \'PressStart2P\';\r\n\r\n    padding: 0;\r\n    margin: 0;\r\n}\r\n\r\n:root {\r\n    font-size: 10px;\r\n    --main-color: rgb(0, 27, 177);\r\n    --sub-color: rgb(100, 100, 100);\r\n}\r\n\r\nh1 {\r\n    font-size: 3rem;\r\n}\r\n\r\n/* Blocks */\r\n\r\nbody {\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    height: 100vh;\r\n    width: 100vw;\r\n}\r\n\r\nheader {\r\n    display: flex;\r\n    align-items: center;\r\n    flex: 1;\r\n\r\n    color: var(--main-color);\r\n    background-color: var(--sub-color);\r\n\r\n    padding: 0 2%;\r\n}\r\n\r\nmain {\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex: 8.5;\r\n\r\n    background-color: rgb(29, 29, 29);\r\n}\r\n\r\n    .main-display {\r\n        display: flex;\r\n        justify-content: space-around;\r\n        align-items: center;\r\n        flex: 8.5;\r\n\r\n        padding: 7.5% 0;\r\n    }\r\n\r\n    .controller {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        flex: 1.5;\r\n    }\r\n\r\nfooter {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex: 0.5;\r\n\r\n    color: var(--main-color);\r\n    background-color: var(--sub-color);\r\n}\r\n\r\n/* Elements */\r\n\r\n.board {\r\n    display: grid;\r\n    grid-template: repeat(10,1fr) / repeat(10,1fr);\r\n\r\n    height: 100%;\r\n    aspect-ratio: 1/1;\r\n}\r\n\r\n.board-field {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    font-size: 2.4rem;\r\n\r\n    background-color: rgb(9, 145, 199);\r\n\r\n    border: 1px solid var(--main-color);\r\n}\r\n\r\nbutton {\r\n    padding: 1.5rem;\r\n}\r\n\r\n/* Modifiers */\r\n\r\n.board:not(.board[under-attack]),\r\n.board-field[hit="true"] {\r\n    pointer-events: none;\r\n}\r\n\r\n.board-field[hit="true"][has-ship="false"]::after {\r\n    content: \'x\';\r\n}\r\n\r\n.board-field[hit="true"][has-ship="true"] {\r\n    background-color: rgb(170, 0, 0);\r\n}\r\n\r\n.player-board .board-field[hit="false"][has-ship="true"],\r\n.config-board .board-field[has-ship="true"] {\r\n    background-color: rgb(0, 237, 103);\r\n}\r\n\r\n.comp-board .board-field[hit="false"]:hover {\r\n    cursor: crosshair;\r\n}\r\n\r\n.board:not(.board[under-attack]),\r\n.comp-board .board-field[hit="false"]:hover,\r\nbutton:not(button[disabled]):hover {\r\n    opacity: 0.7;\r\n}\r\n\r\n.winning-message {\r\n    font-size: 3rem;\r\n\r\n    color: white;\r\n}'],sourceRoot:""}]);const u=l},645:r=>{r.exports=function(r){var e=[];return e.toString=function(){return this.map((function(e){var n="",t=void 0!==e[5];return e[4]&&(n+="@supports (".concat(e[4],") {")),e[2]&&(n+="@media ".concat(e[2]," {")),t&&(n+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),n+=r(e),t&&(n+="}"),e[2]&&(n+="}"),e[4]&&(n+="}"),n})).join("")},e.i=function(r,n,t,o,a){"string"==typeof r&&(r=[[null,r,void 0]]);var i={};if(t)for(var s=0;s<this.length;s++){var d=this[s][0];null!=d&&(i[d]=!0)}for(var c=0;c<r.length;c++){var l=[].concat(r[c]);t&&i[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),e.push(l))}},e}},667:r=>{r.exports=function(r,e){return e||(e={}),r?(r=String(r.__esModule?r.default:r),/^['"].*['"]$/.test(r)&&(r=r.slice(1,-1)),e.hash&&(r+=e.hash),/["'() \t\n]|(%20)/.test(r)||e.needQuotes?'"'.concat(r.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):r):r}},537:r=>{r.exports=function(r){var e=r[1],n=r[3];if(!n)return e;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),a="/*# ".concat(o," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},379:r=>{var e=[];function n(r){for(var n=-1,t=0;t<e.length;t++)if(e[t].identifier===r){n=t;break}return n}function t(r,t){for(var a={},i=[],s=0;s<r.length;s++){var d=r[s],c=t.base?d[0]+t.base:d[0],l=a[c]||0,A="".concat(c," ").concat(l);a[c]=l+1;var u=n(A),p={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==u)e[u].references++,e[u].updater(p);else{var h=o(p,t);t.byIndex=s,e.splice(s,0,{identifier:A,updater:h,references:1})}i.push(A)}return i}function o(r,e){var n=e.domAPI(e);return n.update(r),function(e){if(e){if(e.css===r.css&&e.media===r.media&&e.sourceMap===r.sourceMap&&e.supports===r.supports&&e.layer===r.layer)return;n.update(r=e)}else n.remove()}}r.exports=function(r,o){var a=t(r=r||[],o=o||{});return function(r){r=r||[];for(var i=0;i<a.length;i++){var s=n(a[i]);e[s].references--}for(var d=t(r,o),c=0;c<a.length;c++){var l=n(a[c]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}a=d}}},569:r=>{var e={};r.exports=function(r,n){var t=function(r){if(void 0===e[r]){var n=document.querySelector(r);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(r){n=null}e[r]=n}return e[r]}(r);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(n)}},216:r=>{r.exports=function(r){var e=document.createElement("style");return r.setAttributes(e,r.attributes),r.insert(e,r.options),e}},565:(r,e,n)=>{r.exports=function(r){var e=n.nc;e&&r.setAttribute("nonce",e)}},795:r=>{r.exports=function(r){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=r.insertStyleElement(r);return{update:function(n){!function(r,e,n){var t="";n.supports&&(t+="@supports (".concat(n.supports,") {")),n.media&&(t+="@media ".concat(n.media," {"));var o=void 0!==n.layer;o&&(t+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),t+=n.css,o&&(t+="}"),n.media&&(t+="}"),n.supports&&(t+="}");var a=n.sourceMap;a&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(t,r,e.options)}(e,r,n)},remove:function(){!function(r){if(null===r.parentNode)return!1;r.parentNode.removeChild(r)}(e)}}}},589:r=>{r.exports=function(r,e){if(e.styleSheet)e.styleSheet.cssText=r;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(r))}}},172:(r,e,n)=>{r.exports=n.p+"c4f6a3d49cd1dd4f5ca8.ttf"}},e={};function n(t){var o=e[t];if(void 0!==o)return o.exports;var a=e[t]={id:t,exports:{}};return r[t](a,a.exports,n),a.exports}n.m=r,n.n=r=>{var e=r&&r.__esModule?()=>r.default:()=>r;return n.d(e,{a:e}),e},n.d=(r,e)=>{for(var t in e)n.o(e,t)&&!n.o(r,t)&&Object.defineProperty(r,t,{enumerable:!0,get:e[t]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(r){if("object"==typeof window)return window}}(),n.o=(r,e)=>Object.prototype.hasOwnProperty.call(r,e),(()=>{var r;n.g.importScripts&&(r=n.g.location+"");var e=n.g.document;if(!r&&e&&(e.currentScript&&(r=e.currentScript.src),!r)){var t=e.getElementsByTagName("script");t.length&&(r=t[t.length-1].src)}if(!r)throw new Error("Automatic publicPath is not supported in this browser");r=r.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=r})(),n.b=document.baseURI||self.location.href,n.nc=void 0,(()=>{const r=()=>{const r=document.querySelector("body"),e=r=>{const e=document.querySelector(".main-display"),t=document.createElement("div"),o=document.createElement("div"),a=document.createElement("div"),i=document.querySelector(".start");t.classList.add("config"),o.classList.add("config-controls"),a.classList.add("ships");const s=document.createElement("button"),d=document.createElement("button");d.toggleAttribute("disabled"),s.textContent="Random",d.textContent="Clear",s.addEventListener("click",(()=>{r.resetBoard(),r.placeRandomShips();for(let e=0;e<10;e++)for(let n=0;n<10;n++)document.querySelector(`.board-field[data-row="${e}"][data-col="${n}"]`).setAttribute("has-ship",r.playerBoard.board[e][n].hasShip?"true":"false");d.hasAttribute("disabled")&&d.toggleAttribute("disabled"),i.hasAttribute("disabled")&&i.toggleAttribute("disabled")})),d.addEventListener("click",(()=>{r.resetBoard();for(let r=0;r<10;r++)for(let e=0;e<10;e++)document.querySelector(`.board-field[data-row="${r}"][data-col="${e}"]`).removeAttribute("has-ship");d.toggleAttribute("disabled"),i.toggleAttribute("disabled")})),o.append(s,d),t.append(o,n("config"),a),e.replaceChildren(),e.appendChild(t)},n=(r,e,n,o,a=!1)=>{const i=document.createElement("div");i.classList.add("board",`${r}-board`),a&&i.toggleAttribute("under-attack");for(let r=0;r<10;r++)for(let s=0;s<10;s++){const d=document.createElement("div");d.classList.add("board-field"),d.setAttribute("data-row",r),d.setAttribute("data-col",s),e&&(d.setAttribute("hit","false"),d.setAttribute("has-ship",e.enemyBoard.board[r][s].hasShip?"true":"false")),a&&d.addEventListener("click",(()=>{o(e,n,[r,s],t)})),i.appendChild(d)}return i},t=(r,e,n,t)=>{const o=document.querySelector(`.${r}-board`),a=document.querySelector(`.${e}-board`);document.querySelector(`.${e}-board .board-field[data-row="${n[0]}"][data-col="${n[1]}"]`).setAttribute("hit","true");for(const r of t)document.querySelector(`.${e}-board .board-field[data-row="${r.row}"][data-col="${r.col}"]`).setAttribute("hit","true");a.toggleAttribute("under-attack"),o.toggleAttribute("under-attack")};return{generateUI:(n,t,o)=>{r.replaceChildren(),r.append((()=>{const r=document.createElement("header"),e=document.createElement("h1");return e.textContent="Okeanos War",r.appendChild(e),r})(),((r,n,t)=>{const o=document.createElement("main"),a=document.createElement("section"),i=document.createElement("section");a.classList.add("main-display"),i.classList.add("controller");const s=document.createElement("button"),d=document.createElement("button");return s.classList.add("reset"),d.classList.add("start"),s.toggleAttribute("disabled"),d.toggleAttribute("disabled"),s.textContent="Reset",d.textContent="Start",s.addEventListener("click",(()=>{r.resetBoard(),n.resetBoard(),e(r),s.toggleAttribute("disabled")})),d.addEventListener("click",(()=>{t(),s.toggleAttribute("disabled"),d.toggleAttribute("disabled")})),i.append(d,s),o.append(a,i),o})(n,t,o),(()=>{const r=document.createElement("footer"),e=document.createElement("small");return e.textContent="Copyright © 2023 VictorEX13",r.appendChild(e),r})()),e(n)},generateBoards:(r,e,t)=>{const o=document.querySelector(".main-display");o.replaceChildren(),o.append(n("player",e,r),n("comp",r,e,t,!0))},endTheGame:r=>{const e=document.querySelector(".main-display"),n=document.createElement("p");n.classList.add("winning-message"),n.textContent=`You ${r}!!!`,e.replaceChildren(),e.appendChild(n)}}},e=()=>{let r=0,e=!1;const n=(()=>{const r=[];for(let e=0;e<10;e++){const n=[];for(let r=0;r<10;r++)n.push({hasShip:!1,hitten:!1,row:e,col:r});r.push(n)}return r})(),t=(r,e)=>{const t=[],o=n[r[0]][r[1]].shipIndex,a=n[r[0]][r[1]].shipOnVertical;let i,s,d,c;a?(d=r[1],c=r[0]-o,c-1>=0&&t.push(n[r[0]-o-1][r[1]]),c+e<10&&t.push(n[r[0]-o+e][r[1]])):(d=r[0],c=r[1]-o,c-1>=0&&t.push(n[r[0]][r[1]-o-1]),c+e<10&&t.push(n[r[0]][r[1]-o+e]));for(let l=-1;l<=e;l++)c+l>=0&&c+l<10&&(a?(i=l-o,s=-1):(i=-1,s=l-o),d-1>=0&&t.push(n[r[0]+i][r[1]+s]),d+1<10&&t.push(n[r[0]+(a?i:Math.abs(i))][r[1]+(a?Math.abs(s):s)]));return t},o=(r,t)=>{const o=[];for(let a=0;a<t;a++)e&&r[0]+a<10?o.push(n[r[0]+a][r[1]]):!e&&r[1]+a<10&&o.push(n[r[0]][r[1]+a]);return o},a=(r,n)=>!!(o(r,n).every((r=>!(r.hasShip||r.firstNeighbour||r.secondNeighbour||r.thirdNeighbour)))&&r[0]>=0&&r[1]>=0&&(e&&r[0]+n-1<10&&r[1]<10||!e&&r[0]<10&&r[1]+n-1<10));return{get board(){return n},get shipsOnTheBoard(){return r},get placeVertically(){return e},getShipCoordinates:o,isAValidCoordinate:a,getNeighbourCoordinates:t,placeShip:(o,i)=>{if(a(o,i)){const a=o[0],s=o[1];if(n[a][s].hasShip=!0,n[a][s].ship=(r=>{let e=0;return{shipLength:r,get hits(){return e},hit:()=>{e++},isSunk:()=>r===e}})(i),n[a][s].shipIndex=0,n[a][s].shipOnVertical=e,e)for(let r=1;r<i;r++)n[a+r][s].hasShip=!0,n[a+r][s].ship=n[a][s].ship,n[a+r][s].shipIndex=r,n[a+r][s].shipOnVertical=e;else for(let r=1;r<i;r++)n[a][s+r].hasShip=!0,n[a][s+r].ship=n[a][s].ship,n[a][s+r].shipIndex=r,n[a][s+r].shipOnVertical=e;const d=t(o,i);for(const r of d)r.firstNeighbour?r.secondNeighbour?r.thirdNeighbour=n[a][s].ship:r.secondNeighbour=n[a][s].ship:r.firstNeighbour=n[a][s].ship;r++}},switchShipDirection:()=>{e=!e},receiveAttack:r=>{if(!n[r[0]][r[1]].hitten&&(n[r[0]][r[1]].hitten=!0,n[r[0]][r[1]].hasShip&&(n[r[0]][r[1]].ship.hit(),n[r[0]][r[1]].ship.isSunk()))){const e=n[r[0]][r[1]].ship,t=n.flat().filter((r=>r.firstNeighbour===e||r.secondNeighbour===e||r.thirdNeighbour===e));for(const r of t)r.hitten=!0}},isAllShipsSunk:()=>n.flat().filter((r=>r.ship)).every((r=>r.ship.isSunk()))}},t=(r=!1)=>{let n,t=e();const o=()=>[Math.floor(10*Math.random()),Math.floor(10*Math.random())];return{get playerBoard(){return t},get enemyBoard(){return n},resetBoard:()=>{t=e()},setEnemyBoard:r=>{n=r},placeRandomShips:()=>{for(;t.shipsOnTheBoard<10;)Math.random()>=.5&&t.switchShipDirection(),t.placeShip(o(),t.shipsOnTheBoard<4?1:t.shipsOnTheBoard<7?2:t.shipsOnTheBoard<9?3:4)},attack:e=>{if(r){let r,e=!1;for(;!e;)r=o(),n.board[r[0]][r[1]].hitten||(n.receiveAttack(r),e=!0);return r}n.receiveAttack(e)}}};var o=n(379),a=n.n(o),i=n(795),s=n.n(i),d=n(569),c=n.n(d),l=n(565),A=n.n(l),u=n(216),p=n.n(u),h=n(589),f=n.n(h),b=n(756),m={};m.styleTagTransform=f(),m.setAttributes=A(),m.insert=c().bind(null,"head"),m.domAPI=s(),m.insertStyleElement=p(),a()(b.Z,m),b.Z&&b.Z.locals&&b.Z.locals,(()=>{const e=r(),n=t(),o=t(!0),a=()=>{o.placeRandomShips(),n.setEnemyBoard(o.playerBoard),o.setEnemyBoard(n.playerBoard),e.generateBoards(n,o,i)},i=(r,n,t,o)=>{let a=[];r.attack(t),r.enemyBoard.board[t[0]][t[1]].hasShip&&r.enemyBoard.board[t[0]][t[1]].ship.isSunk()&&(a=r.enemyBoard.getNeighbourCoordinates(t,r.enemyBoard.board[t[0]][t[1]].ship.shipLength)),o("player","comp",t,a),r.enemyBoard.isAllShipsSunk()?setTimeout((()=>{e.endTheGame("Win")}),500):setTimeout((()=>{let r=[];const t=n.attack(),[a,i]=t;n.enemyBoard.board[a][i].hasShip&&n.enemyBoard.board[a][i].ship.isSunk()&&(r=n.enemyBoard.getNeighbourCoordinates(t,n.enemyBoard.board[a][i].ship.shipLength)),o("comp","player",t,r),n.enemyBoard.isAllShipsSunk()&&setTimeout((()=>{e.endTheGame("Lose")}),500)}),1e3)};return{renderUI:()=>{e.generateUI(n,o,a)}}})().renderUI()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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SUEsRUFBTSxJQUFJMEMsS0FBS0csV0FFMURtQixFQUF1QkYsRUFBZ0JsRSxXQUFXMkIsd0JBQ2hEdkIsRUFDQThELEVBQWdCbEUsV0FBV1gsTUFBTWUsRUFBTSxJQUFJQSxFQUFNLElBQUkwQyxLQUFLbEIsYUFJOUR1QyxFQUFHLFNBQVUsT0FBUS9ELEVBQU9nRSxHQUV4QkYsRUFBZ0JsRSxXQUFXdUQsaUJBQzdCYyxZQUFXLEtBQ1RKLEVBQWM3QyxXQUFXLE1BQU0sR0FDOUIsS0FJSGlELFlBQVcsS0FDVCxJQUFJQyxFQUF3QixHQUM1QixNQUFNQyxFQUFnQjNFLEVBQU1rRSxVQUNyQnZELEVBQUtDLEdBQU8rRCxFQUdqQjNFLEVBQU1JLFdBQVdYLE1BQU1rQixHQUFLQyxHQUFLbEIsU0FDakNNLEVBQU1JLFdBQVdYLE1BQU1rQixHQUFLQyxHQUFLc0MsS0FBS0csV0FFdENxQixFQUF3QjFFLEVBQU1JLFdBQVcyQix3QkFDdkM0QyxFQUNBM0UsRUFBTUksV0FBV1gsTUFBTWtCLEdBQUtDLEdBQUtzQyxLQUFLbEIsYUFJMUN1QyxFQUFHLE9BQVEsU0FBVUksRUFBZUQsR0FFaEMxRSxFQUFNSSxXQUFXdUQsa0JBQ25CYyxZQUFXLEtBQ1RKLEVBQWM3QyxXQUFXLE9BQU8sR0FDL0IsSUFFTCxHQUNDLElBQ0wsRUFPRixNQUFPLENBQUVvRCxTQUpRLEtBQ2ZQLEVBQWN4RCxXQUFXckMsRUFBUXNDLEVBQU1DLEVBQWEsRUFHbkMsRUFHUixHQUVSNkQsVSIsInNvdXJjZXMiOlsid2VicGFjazovL2JhdHRsZXNoaXAvLi9zcmMvc3R5bGVzL21haW4uY3NzIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvZ2V0VXJsLmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAvd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC93ZWJwYWNrL3J1bnRpbWUvY29tcGF0IGdldCBkZWZhdWx0IGV4cG9ydCIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwL3dlYnBhY2svcnVudGltZS9kZWZpbmUgcHJvcGVydHkgZ2V0dGVycyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwL3dlYnBhY2svcnVudGltZS9nbG9iYWwiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovL2JhdHRsZXNoaXAvd2VicGFjay9ydW50aW1lL3B1YmxpY1BhdGgiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC93ZWJwYWNrL3J1bnRpbWUvanNvbnAgY2h1bmsgbG9hZGluZyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwL3dlYnBhY2svcnVudGltZS9ub25jZSIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vc3JjL21vZHVsZXMvVUkvVUkuanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL3NyYy9tb2R1bGVzL2JvYXJkL2dhbWVCb2FyZC5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vc3JjL21vZHVsZXMvc2hpcC9zaGlwLmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9zcmMvbW9kdWxlcy9wbGF5ZXIvcGxheWVyLmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9zcmMvc3R5bGVzL21haW4uY3NzP2U4MGEiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL3NyYy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvZ2V0VXJsLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzBfX18gPSBuZXcgVVJMKFwiLi8uLi9hc3NldHMvUHJlc3NTdGFydDJQLVJlZ3VsYXIudHRmXCIsIGltcG9ydC5tZXRhLnVybCk7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMF9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzBfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiLyogR2VuZXJhbCBSdWxlcyAqL1xcclxcblxcclxcbkBmb250LWZhY2Uge1xcclxcbiAgICBmb250LWZhbWlseTogJ1ByZXNzU3RhcnQyUCc7XFxyXFxuICAgIHNyYzogdXJsKFwiICsgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMF9fXyArIFwiKSBmb3JtYXQoJ3RydWV0eXBlJyk7XFxyXFxufVxcclxcblxcclxcbiosXFxyXFxuKjo6YmVmb3JlLFxcclxcbio6OmFmdGVyIHtcXHJcXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcXHJcXG5cXHJcXG4gICAgZm9udC1mYW1pbHk6ICdQcmVzc1N0YXJ0MlAnO1xcclxcblxcclxcbiAgICBwYWRkaW5nOiAwO1xcclxcbiAgICBtYXJnaW46IDA7XFxyXFxufVxcclxcblxcclxcbjpyb290IHtcXHJcXG4gICAgZm9udC1zaXplOiAxMHB4O1xcclxcbiAgICAtLW1haW4tY29sb3I6IHJnYigwLCAyNywgMTc3KTtcXHJcXG4gICAgLS1zdWItY29sb3I6IHJnYigxMDAsIDEwMCwgMTAwKTtcXHJcXG59XFxyXFxuXFxyXFxuaDEge1xcclxcbiAgICBmb250LXNpemU6IDNyZW07XFxyXFxufVxcclxcblxcclxcbi8qIEJsb2NrcyAqL1xcclxcblxcclxcbmJvZHkge1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcclxcblxcclxcbiAgICBoZWlnaHQ6IDEwMHZoO1xcclxcbiAgICB3aWR0aDogMTAwdnc7XFxyXFxufVxcclxcblxcclxcbmhlYWRlciB7XFxyXFxuICAgIGRpc3BsYXk6IGZsZXg7XFxyXFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxuICAgIGZsZXg6IDE7XFxyXFxuXFxyXFxuICAgIGNvbG9yOiB2YXIoLS1tYWluLWNvbG9yKTtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tc3ViLWNvbG9yKTtcXHJcXG5cXHJcXG4gICAgcGFkZGluZzogMCAyJTtcXHJcXG59XFxyXFxuXFxyXFxubWFpbiB7XFxyXFxuICAgIGRpc3BsYXk6IGZsZXg7XFxyXFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxyXFxuICAgIGZsZXg6IDguNTtcXHJcXG5cXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDI5LCAyOSwgMjkpO1xcclxcbn1cXHJcXG5cXHJcXG4gICAgLm1haW4tZGlzcGxheSB7XFxyXFxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XFxyXFxuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbiAgICAgICAgZmxleDogOC41O1xcclxcblxcclxcbiAgICAgICAgcGFkZGluZzogNy41JSAwO1xcclxcbiAgICB9XFxyXFxuXFxyXFxuICAgIC5jb250cm9sbGVyIHtcXHJcXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XFxyXFxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXHJcXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxuICAgICAgICBmbGV4OiAxLjU7XFxyXFxuICAgIH1cXHJcXG5cXHJcXG5mb290ZXIge1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXHJcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXHJcXG4gICAgZmxleDogMC41O1xcclxcblxcclxcbiAgICBjb2xvcjogdmFyKC0tbWFpbi1jb2xvcik7XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXN1Yi1jb2xvcik7XFxyXFxufVxcclxcblxcclxcbi8qIEVsZW1lbnRzICovXFxyXFxuXFxyXFxuLmJvYXJkIHtcXHJcXG4gICAgZGlzcGxheTogZ3JpZDtcXHJcXG4gICAgZ3JpZC10ZW1wbGF0ZTogcmVwZWF0KDEwLDFmcikgLyByZXBlYXQoMTAsMWZyKTtcXHJcXG5cXHJcXG4gICAgaGVpZ2h0OiAxMDAlO1xcclxcbiAgICBhc3BlY3QtcmF0aW86IDEvMTtcXHJcXG59XFxyXFxuXFxyXFxuLmJvYXJkLWZpZWxkIHtcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxyXFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxuXFxyXFxuICAgIGZvbnQtc2l6ZTogMi40cmVtO1xcclxcblxcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoOSwgMTQ1LCAxOTkpO1xcclxcblxcclxcbiAgICBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1tYWluLWNvbG9yKTtcXHJcXG59XFxyXFxuXFxyXFxuYnV0dG9uIHtcXHJcXG4gICAgcGFkZGluZzogMS41cmVtO1xcclxcbn1cXHJcXG5cXHJcXG4vKiBNb2RpZmllcnMgKi9cXHJcXG5cXHJcXG4uYm9hcmQ6bm90KC5ib2FyZFt1bmRlci1hdHRhY2tdKSxcXHJcXG4uYm9hcmQtZmllbGRbaGl0PVxcXCJ0cnVlXFxcIl0ge1xcclxcbiAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcXHJcXG59XFxyXFxuXFxyXFxuLmJvYXJkLWZpZWxkW2hpdD1cXFwidHJ1ZVxcXCJdW2hhcy1zaGlwPVxcXCJmYWxzZVxcXCJdOjphZnRlciB7XFxyXFxuICAgIGNvbnRlbnQ6ICd4JztcXHJcXG59XFxyXFxuXFxyXFxuLmJvYXJkLWZpZWxkW2hpdD1cXFwidHJ1ZVxcXCJdW2hhcy1zaGlwPVxcXCJ0cnVlXFxcIl0ge1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMTcwLCAwLCAwKTtcXHJcXG59XFxyXFxuXFxyXFxuLnBsYXllci1ib2FyZCAuYm9hcmQtZmllbGRbaGl0PVxcXCJmYWxzZVxcXCJdW2hhcy1zaGlwPVxcXCJ0cnVlXFxcIl0sXFxyXFxuLmNvbmZpZy1ib2FyZCAuYm9hcmQtZmllbGRbaGFzLXNoaXA9XFxcInRydWVcXFwiXSB7XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigwLCAyMzcsIDEwMyk7XFxyXFxufVxcclxcblxcclxcbi5jb21wLWJvYXJkIC5ib2FyZC1maWVsZFtoaXQ9XFxcImZhbHNlXFxcIl06aG92ZXIge1xcclxcbiAgICBjdXJzb3I6IGNyb3NzaGFpcjtcXHJcXG59XFxyXFxuXFxyXFxuLmJvYXJkOm5vdCguYm9hcmRbdW5kZXItYXR0YWNrXSksXFxyXFxuLmNvbXAtYm9hcmQgLmJvYXJkLWZpZWxkW2hpdD1cXFwiZmFsc2VcXFwiXTpob3ZlcixcXHJcXG5idXR0b246bm90KGJ1dHRvbltkaXNhYmxlZF0pOmhvdmVyIHtcXHJcXG4gICAgb3BhY2l0eTogMC43O1xcclxcbn1cXHJcXG5cXHJcXG4ud2lubmluZy1tZXNzYWdlIHtcXHJcXG4gICAgZm9udC1zaXplOiAzcmVtO1xcclxcblxcclxcbiAgICBjb2xvcjogd2hpdGU7XFxyXFxufVwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9zdHlsZXMvbWFpbi5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUEsa0JBQWtCOztBQUVsQjtJQUNJLDJCQUEyQjtJQUMzQiwrREFBbUU7QUFDdkU7O0FBRUE7OztJQUdJLHNCQUFzQjs7SUFFdEIsMkJBQTJCOztJQUUzQixVQUFVO0lBQ1YsU0FBUztBQUNiOztBQUVBO0lBQ0ksZUFBZTtJQUNmLDZCQUE2QjtJQUM3QiwrQkFBK0I7QUFDbkM7O0FBRUE7SUFDSSxlQUFlO0FBQ25COztBQUVBLFdBQVc7O0FBRVg7SUFDSSxhQUFhO0lBQ2Isc0JBQXNCOztJQUV0QixhQUFhO0lBQ2IsWUFBWTtBQUNoQjs7QUFFQTtJQUNJLGFBQWE7SUFDYixtQkFBbUI7SUFDbkIsT0FBTzs7SUFFUCx3QkFBd0I7SUFDeEIsa0NBQWtDOztJQUVsQyxhQUFhO0FBQ2pCOztBQUVBO0lBQ0ksYUFBYTtJQUNiLHNCQUFzQjtJQUN0QixTQUFTOztJQUVULGlDQUFpQztBQUNyQzs7SUFFSTtRQUNJLGFBQWE7UUFDYiw2QkFBNkI7UUFDN0IsbUJBQW1CO1FBQ25CLFNBQVM7O1FBRVQsZUFBZTtJQUNuQjs7SUFFQTtRQUNJLGFBQWE7UUFDYix1QkFBdUI7UUFDdkIsbUJBQW1CO1FBQ25CLFNBQVM7SUFDYjs7QUFFSjtJQUNJLGFBQWE7SUFDYix1QkFBdUI7SUFDdkIsbUJBQW1CO0lBQ25CLFNBQVM7O0lBRVQsd0JBQXdCO0lBQ3hCLGtDQUFrQztBQUN0Qzs7QUFFQSxhQUFhOztBQUViO0lBQ0ksYUFBYTtJQUNiLDhDQUE4Qzs7SUFFOUMsWUFBWTtJQUNaLGlCQUFpQjtBQUNyQjs7QUFFQTtJQUNJLGFBQWE7SUFDYix1QkFBdUI7SUFDdkIsbUJBQW1COztJQUVuQixpQkFBaUI7O0lBRWpCLGtDQUFrQzs7SUFFbEMsbUNBQW1DO0FBQ3ZDOztBQUVBO0lBQ0ksZUFBZTtBQUNuQjs7QUFFQSxjQUFjOztBQUVkOztJQUVJLG9CQUFvQjtBQUN4Qjs7QUFFQTtJQUNJLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxnQ0FBZ0M7QUFDcEM7O0FBRUE7O0lBRUksa0NBQWtDO0FBQ3RDOztBQUVBO0lBQ0ksaUJBQWlCO0FBQ3JCOztBQUVBOzs7SUFHSSxZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksZUFBZTs7SUFFZixZQUFZO0FBQ2hCXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi8qIEdlbmVyYWwgUnVsZXMgKi9cXHJcXG5cXHJcXG5AZm9udC1mYWNlIHtcXHJcXG4gICAgZm9udC1mYW1pbHk6ICdQcmVzc1N0YXJ0MlAnO1xcclxcbiAgICBzcmM6IHVybCgnLi8uLi9hc3NldHMvUHJlc3NTdGFydDJQLVJlZ3VsYXIudHRmJykgZm9ybWF0KCd0cnVldHlwZScpO1xcclxcbn1cXHJcXG5cXHJcXG4qLFxcclxcbio6OmJlZm9yZSxcXHJcXG4qOjphZnRlciB7XFxyXFxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxyXFxuXFxyXFxuICAgIGZvbnQtZmFtaWx5OiAnUHJlc3NTdGFydDJQJztcXHJcXG5cXHJcXG4gICAgcGFkZGluZzogMDtcXHJcXG4gICAgbWFyZ2luOiAwO1xcclxcbn1cXHJcXG5cXHJcXG46cm9vdCB7XFxyXFxuICAgIGZvbnQtc2l6ZTogMTBweDtcXHJcXG4gICAgLS1tYWluLWNvbG9yOiByZ2IoMCwgMjcsIDE3Nyk7XFxyXFxuICAgIC0tc3ViLWNvbG9yOiByZ2IoMTAwLCAxMDAsIDEwMCk7XFxyXFxufVxcclxcblxcclxcbmgxIHtcXHJcXG4gICAgZm9udC1zaXplOiAzcmVtO1xcclxcbn1cXHJcXG5cXHJcXG4vKiBCbG9ja3MgKi9cXHJcXG5cXHJcXG5ib2R5IHtcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXHJcXG5cXHJcXG4gICAgaGVpZ2h0OiAxMDB2aDtcXHJcXG4gICAgd2lkdGg6IDEwMHZ3O1xcclxcbn1cXHJcXG5cXHJcXG5oZWFkZXIge1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbiAgICBmbGV4OiAxO1xcclxcblxcclxcbiAgICBjb2xvcjogdmFyKC0tbWFpbi1jb2xvcik7XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXN1Yi1jb2xvcik7XFxyXFxuXFxyXFxuICAgIHBhZGRpbmc6IDAgMiU7XFxyXFxufVxcclxcblxcclxcbm1haW4ge1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcclxcbiAgICBmbGV4OiA4LjU7XFxyXFxuXFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigyOSwgMjksIDI5KTtcXHJcXG59XFxyXFxuXFxyXFxuICAgIC5tYWluLWRpc3BsYXkge1xcclxcbiAgICAgICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xcclxcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXHJcXG4gICAgICAgIGZsZXg6IDguNTtcXHJcXG5cXHJcXG4gICAgICAgIHBhZGRpbmc6IDcuNSUgMDtcXHJcXG4gICAgfVxcclxcblxcclxcbiAgICAuY29udHJvbGxlciB7XFxyXFxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxyXFxuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbiAgICAgICAgZmxleDogMS41O1xcclxcbiAgICB9XFxyXFxuXFxyXFxuZm9vdGVyIHtcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxyXFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxuICAgIGZsZXg6IDAuNTtcXHJcXG5cXHJcXG4gICAgY29sb3I6IHZhcigtLW1haW4tY29sb3IpO1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1zdWItY29sb3IpO1xcclxcbn1cXHJcXG5cXHJcXG4vKiBFbGVtZW50cyAqL1xcclxcblxcclxcbi5ib2FyZCB7XFxyXFxuICAgIGRpc3BsYXk6IGdyaWQ7XFxyXFxuICAgIGdyaWQtdGVtcGxhdGU6IHJlcGVhdCgxMCwxZnIpIC8gcmVwZWF0KDEwLDFmcik7XFxyXFxuXFxyXFxuICAgIGhlaWdodDogMTAwJTtcXHJcXG4gICAgYXNwZWN0LXJhdGlvOiAxLzE7XFxyXFxufVxcclxcblxcclxcbi5ib2FyZC1maWVsZCB7XFxyXFxuICAgIGRpc3BsYXk6IGZsZXg7XFxyXFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcclxcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcblxcclxcbiAgICBmb250LXNpemU6IDIuNHJlbTtcXHJcXG5cXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDksIDE0NSwgMTk5KTtcXHJcXG5cXHJcXG4gICAgYm9yZGVyOiAxcHggc29saWQgdmFyKC0tbWFpbi1jb2xvcik7XFxyXFxufVxcclxcblxcclxcbmJ1dHRvbiB7XFxyXFxuICAgIHBhZGRpbmc6IDEuNXJlbTtcXHJcXG59XFxyXFxuXFxyXFxuLyogTW9kaWZpZXJzICovXFxyXFxuXFxyXFxuLmJvYXJkOm5vdCguYm9hcmRbdW5kZXItYXR0YWNrXSksXFxyXFxuLmJvYXJkLWZpZWxkW2hpdD1cXFwidHJ1ZVxcXCJdIHtcXHJcXG4gICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XFxyXFxufVxcclxcblxcclxcbi5ib2FyZC1maWVsZFtoaXQ9XFxcInRydWVcXFwiXVtoYXMtc2hpcD1cXFwiZmFsc2VcXFwiXTo6YWZ0ZXIge1xcclxcbiAgICBjb250ZW50OiAneCc7XFxyXFxufVxcclxcblxcclxcbi5ib2FyZC1maWVsZFtoaXQ9XFxcInRydWVcXFwiXVtoYXMtc2hpcD1cXFwidHJ1ZVxcXCJdIHtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDE3MCwgMCwgMCk7XFxyXFxufVxcclxcblxcclxcbi5wbGF5ZXItYm9hcmQgLmJvYXJkLWZpZWxkW2hpdD1cXFwiZmFsc2VcXFwiXVtoYXMtc2hpcD1cXFwidHJ1ZVxcXCJdLFxcclxcbi5jb25maWctYm9hcmQgLmJvYXJkLWZpZWxkW2hhcy1zaGlwPVxcXCJ0cnVlXFxcIl0ge1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMCwgMjM3LCAxMDMpO1xcclxcbn1cXHJcXG5cXHJcXG4uY29tcC1ib2FyZCAuYm9hcmQtZmllbGRbaGl0PVxcXCJmYWxzZVxcXCJdOmhvdmVyIHtcXHJcXG4gICAgY3Vyc29yOiBjcm9zc2hhaXI7XFxyXFxufVxcclxcblxcclxcbi5ib2FyZDpub3QoLmJvYXJkW3VuZGVyLWF0dGFja10pLFxcclxcbi5jb21wLWJvYXJkIC5ib2FyZC1maWVsZFtoaXQ9XFxcImZhbHNlXFxcIl06aG92ZXIsXFxyXFxuYnV0dG9uOm5vdChidXR0b25bZGlzYWJsZWRdKTpob3ZlciB7XFxyXFxuICAgIG9wYWNpdHk6IDAuNztcXHJcXG59XFxyXFxuXFxyXFxuLndpbm5pbmctbWVzc2FnZSB7XFxyXFxuICAgIGZvbnQtc2l6ZTogM3JlbTtcXHJcXG5cXHJcXG4gICAgY29sb3I6IHdoaXRlO1xcclxcbn1cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qXG4gIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG4gIEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKSB7XG4gIHZhciBsaXN0ID0gW107XG5cbiAgLy8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuICBsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICB2YXIgY29udGVudCA9IFwiXCI7XG4gICAgICB2YXIgbmVlZExheWVyID0gdHlwZW9mIGl0ZW1bNV0gIT09IFwidW5kZWZpbmVkXCI7XG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIik7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpO1xuICAgICAgfVxuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIik7XG4gICAgICB9XG4gICAgICBjb250ZW50ICs9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSk7XG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH0pLmpvaW4oXCJcIik7XG4gIH07XG5cbiAgLy8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3RcbiAgbGlzdC5pID0gZnVuY3Rpb24gaShtb2R1bGVzLCBtZWRpYSwgZGVkdXBlLCBzdXBwb3J0cywgbGF5ZXIpIHtcbiAgICBpZiAodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgIG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsIHVuZGVmaW5lZF1dO1xuICAgIH1cbiAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuICAgIGlmIChkZWR1cGUpIHtcbiAgICAgIGZvciAodmFyIGsgPSAwOyBrIDwgdGhpcy5sZW5ndGg7IGsrKykge1xuICAgICAgICB2YXIgaWQgPSB0aGlzW2tdWzBdO1xuICAgICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICAgIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICBmb3IgKHZhciBfayA9IDA7IF9rIDwgbW9kdWxlcy5sZW5ndGg7IF9rKyspIHtcbiAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2tdKTtcbiAgICAgIGlmIChkZWR1cGUgJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cbiAgICAgIGlmICh0eXBlb2YgbGF5ZXIgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBpdGVtWzVdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAobWVkaWEpIHtcbiAgICAgICAgaWYgKCFpdGVtWzJdKSB7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKHN1cHBvcnRzKSB7XG4gICAgICAgIGlmICghaXRlbVs0XSkge1xuICAgICAgICAgIGl0ZW1bNF0gPSBcIlwiLmNvbmNhdChzdXBwb3J0cyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzRdID0gc3VwcG9ydHM7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiBsaXN0O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAodXJsLCBvcHRpb25zKSB7XG4gIGlmICghb3B0aW9ucykge1xuICAgIG9wdGlvbnMgPSB7fTtcbiAgfVxuICBpZiAoIXVybCkge1xuICAgIHJldHVybiB1cmw7XG4gIH1cbiAgdXJsID0gU3RyaW5nKHVybC5fX2VzTW9kdWxlID8gdXJsLmRlZmF1bHQgOiB1cmwpO1xuXG4gIC8vIElmIHVybCBpcyBhbHJlYWR5IHdyYXBwZWQgaW4gcXVvdGVzLCByZW1vdmUgdGhlbVxuICBpZiAoL15bJ1wiXS4qWydcIl0kLy50ZXN0KHVybCkpIHtcbiAgICB1cmwgPSB1cmwuc2xpY2UoMSwgLTEpO1xuICB9XG4gIGlmIChvcHRpb25zLmhhc2gpIHtcbiAgICB1cmwgKz0gb3B0aW9ucy5oYXNoO1xuICB9XG5cbiAgLy8gU2hvdWxkIHVybCBiZSB3cmFwcGVkP1xuICAvLyBTZWUgaHR0cHM6Ly9kcmFmdHMuY3Nzd2cub3JnL2Nzcy12YWx1ZXMtMy8jdXJsc1xuICBpZiAoL1tcIicoKSBcXHRcXG5dfCglMjApLy50ZXN0KHVybCkgfHwgb3B0aW9ucy5uZWVkUXVvdGVzKSB7XG4gICAgcmV0dXJuIFwiXFxcIlwiLmNvbmNhdCh1cmwucmVwbGFjZSgvXCIvZywgJ1xcXFxcIicpLnJlcGxhY2UoL1xcbi9nLCBcIlxcXFxuXCIpLCBcIlxcXCJcIik7XG4gIH1cbiAgcmV0dXJuIHVybDtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0ZW0pIHtcbiAgdmFyIGNvbnRlbnQgPSBpdGVtWzFdO1xuICB2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG4gIGlmICghY3NzTWFwcGluZykge1xuICAgIHJldHVybiBjb250ZW50O1xuICB9XG4gIGlmICh0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgdmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KGNzc01hcHBpbmcpKSkpO1xuICAgIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbiAgICByZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oXCJcXG5cIik7XG4gIH1cbiAgcmV0dXJuIFtjb250ZW50XS5qb2luKFwiXFxuXCIpO1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIHN0eWxlc0luRE9NID0gW107XG5mdW5jdGlvbiBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKSB7XG4gIHZhciByZXN1bHQgPSAtMTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXNJbkRPTS5sZW5ndGg7IGkrKykge1xuICAgIGlmIChzdHlsZXNJbkRPTVtpXS5pZGVudGlmaWVyID09PSBpZGVudGlmaWVyKSB7XG4gICAgICByZXN1bHQgPSBpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG4gIHJldHVybiByZXN1bHQ7XG59XG5mdW5jdGlvbiBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucykge1xuICB2YXIgaWRDb3VudE1hcCA9IHt9O1xuICB2YXIgaWRlbnRpZmllcnMgPSBbXTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGl0ZW0gPSBsaXN0W2ldO1xuICAgIHZhciBpZCA9IG9wdGlvbnMuYmFzZSA/IGl0ZW1bMF0gKyBvcHRpb25zLmJhc2UgOiBpdGVtWzBdO1xuICAgIHZhciBjb3VudCA9IGlkQ291bnRNYXBbaWRdIHx8IDA7XG4gICAgdmFyIGlkZW50aWZpZXIgPSBcIlwiLmNvbmNhdChpZCwgXCIgXCIpLmNvbmNhdChjb3VudCk7XG4gICAgaWRDb3VudE1hcFtpZF0gPSBjb3VudCArIDE7XG4gICAgdmFyIGluZGV4QnlJZGVudGlmaWVyID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgdmFyIG9iaiA9IHtcbiAgICAgIGNzczogaXRlbVsxXSxcbiAgICAgIG1lZGlhOiBpdGVtWzJdLFxuICAgICAgc291cmNlTWFwOiBpdGVtWzNdLFxuICAgICAgc3VwcG9ydHM6IGl0ZW1bNF0sXG4gICAgICBsYXllcjogaXRlbVs1XVxuICAgIH07XG4gICAgaWYgKGluZGV4QnlJZGVudGlmaWVyICE9PSAtMSkge1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnJlZmVyZW5jZXMrKztcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS51cGRhdGVyKG9iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciB1cGRhdGVyID0gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucyk7XG4gICAgICBvcHRpb25zLmJ5SW5kZXggPSBpO1xuICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKGksIDAsIHtcbiAgICAgICAgaWRlbnRpZmllcjogaWRlbnRpZmllcixcbiAgICAgICAgdXBkYXRlcjogdXBkYXRlcixcbiAgICAgICAgcmVmZXJlbmNlczogMVxuICAgICAgfSk7XG4gICAgfVxuICAgIGlkZW50aWZpZXJzLnB1c2goaWRlbnRpZmllcik7XG4gIH1cbiAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuZnVuY3Rpb24gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucykge1xuICB2YXIgYXBpID0gb3B0aW9ucy5kb21BUEkob3B0aW9ucyk7XG4gIGFwaS51cGRhdGUob2JqKTtcbiAgdmFyIHVwZGF0ZXIgPSBmdW5jdGlvbiB1cGRhdGVyKG5ld09iaikge1xuICAgIGlmIChuZXdPYmopIHtcbiAgICAgIGlmIChuZXdPYmouY3NzID09PSBvYmouY3NzICYmIG5ld09iai5tZWRpYSA9PT0gb2JqLm1lZGlhICYmIG5ld09iai5zb3VyY2VNYXAgPT09IG9iai5zb3VyY2VNYXAgJiYgbmV3T2JqLnN1cHBvcnRzID09PSBvYmouc3VwcG9ydHMgJiYgbmV3T2JqLmxheWVyID09PSBvYmoubGF5ZXIpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgYXBpLnVwZGF0ZShvYmogPSBuZXdPYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVtb3ZlKCk7XG4gICAgfVxuICB9O1xuICByZXR1cm4gdXBkYXRlcjtcbn1cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGxpc3QsIG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIGxpc3QgPSBsaXN0IHx8IFtdO1xuICB2YXIgbGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpO1xuICByZXR1cm4gZnVuY3Rpb24gdXBkYXRlKG5ld0xpc3QpIHtcbiAgICBuZXdMaXN0ID0gbmV3TGlzdCB8fCBbXTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGlkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbaV07XG4gICAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4XS5yZWZlcmVuY2VzLS07XG4gICAgfVxuICAgIHZhciBuZXdMYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obmV3TGlzdCwgb3B0aW9ucyk7XG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBfaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tfaV07XG4gICAgICB2YXIgX2luZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoX2lkZW50aWZpZXIpO1xuICAgICAgaWYgKHN0eWxlc0luRE9NW19pbmRleF0ucmVmZXJlbmNlcyA9PT0gMCkge1xuICAgICAgICBzdHlsZXNJbkRPTVtfaW5kZXhdLnVwZGF0ZXIoKTtcbiAgICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKF9pbmRleCwgMSk7XG4gICAgICB9XG4gICAgfVxuICAgIGxhc3RJZGVudGlmaWVycyA9IG5ld0xhc3RJZGVudGlmaWVycztcbiAgfTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBtZW1vID0ge307XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gZ2V0VGFyZ2V0KHRhcmdldCkge1xuICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHZhciBzdHlsZVRhcmdldCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTtcblxuICAgIC8vIFNwZWNpYWwgY2FzZSB0byByZXR1cm4gaGVhZCBvZiBpZnJhbWUgaW5zdGVhZCBvZiBpZnJhbWUgaXRzZWxmXG4gICAgaWYgKHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCAmJiBzdHlsZVRhcmdldCBpbnN0YW5jZW9mIHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgLy8gVGhpcyB3aWxsIHRocm93IGFuIGV4Y2VwdGlvbiBpZiBhY2Nlc3MgdG8gaWZyYW1lIGlzIGJsb2NrZWRcbiAgICAgICAgLy8gZHVlIHRvIGNyb3NzLW9yaWdpbiByZXN0cmljdGlvbnNcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBzdHlsZVRhcmdldC5jb250ZW50RG9jdW1lbnQuaGVhZDtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgLy8gaXN0YW5idWwgaWdub3JlIG5leHRcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBudWxsO1xuICAgICAgfVxuICAgIH1cbiAgICBtZW1vW3RhcmdldF0gPSBzdHlsZVRhcmdldDtcbiAgfVxuICByZXR1cm4gbWVtb1t0YXJnZXRdO1xufVxuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGluc2VydEJ5U2VsZWN0b3IoaW5zZXJ0LCBzdHlsZSkge1xuICB2YXIgdGFyZ2V0ID0gZ2V0VGFyZ2V0KGluc2VydCk7XG4gIGlmICghdGFyZ2V0KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiQ291bGRuJ3QgZmluZCBhIHN0eWxlIHRhcmdldC4gVGhpcyBwcm9iYWJseSBtZWFucyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlICdpbnNlcnQnIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKTtcbiAgfVxuICB0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xufVxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRCeVNlbGVjdG9yOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKSB7XG4gIHZhciBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO1xuICBvcHRpb25zLnNldEF0dHJpYnV0ZXMoZWxlbWVudCwgb3B0aW9ucy5hdHRyaWJ1dGVzKTtcbiAgb3B0aW9ucy5pbnNlcnQoZWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbiAgcmV0dXJuIGVsZW1lbnQ7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydFN0eWxlRWxlbWVudDsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMoc3R5bGVFbGVtZW50KSB7XG4gIHZhciBub25jZSA9IHR5cGVvZiBfX3dlYnBhY2tfbm9uY2VfXyAhPT0gXCJ1bmRlZmluZWRcIiA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcbiAgaWYgKG5vbmNlKSB7XG4gICAgc3R5bGVFbGVtZW50LnNldEF0dHJpYnV0ZShcIm5vbmNlXCIsIG5vbmNlKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXM7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopIHtcbiAgdmFyIGNzcyA9IFwiXCI7XG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChvYmouc3VwcG9ydHMsIFwiKSB7XCIpO1xuICB9XG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJAbWVkaWEgXCIuY29uY2F0KG9iai5tZWRpYSwgXCIge1wiKTtcbiAgfVxuICB2YXIgbmVlZExheWVyID0gdHlwZW9mIG9iai5sYXllciAhPT0gXCJ1bmRlZmluZWRcIjtcbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIkBsYXllclwiLmNvbmNhdChvYmoubGF5ZXIubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChvYmoubGF5ZXIpIDogXCJcIiwgXCIge1wiKTtcbiAgfVxuICBjc3MgKz0gb2JqLmNzcztcbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgdmFyIHNvdXJjZU1hcCA9IG9iai5zb3VyY2VNYXA7XG4gIGlmIChzb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiLmNvbmNhdChidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpLCBcIiAqL1wiKTtcbiAgfVxuXG4gIC8vIEZvciBvbGQgSUVcbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuICBvcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xufVxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCkge1xuICAvLyBpc3RhbmJ1bCBpZ25vcmUgaWZcbiAgaWYgKHN0eWxlRWxlbWVudC5wYXJlbnROb2RlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHN0eWxlRWxlbWVudC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudCk7XG59XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gZG9tQVBJKG9wdGlvbnMpIHtcbiAgaWYgKHR5cGVvZiBkb2N1bWVudCA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHJldHVybiB7XG4gICAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZSgpIHt9LFxuICAgICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7fVxuICAgIH07XG4gIH1cbiAgdmFyIHN0eWxlRWxlbWVudCA9IG9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpO1xuICByZXR1cm4ge1xuICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKG9iaikge1xuICAgICAgYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopO1xuICAgIH0sXG4gICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7XG4gICAgICByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KTtcbiAgICB9XG4gIH07XG59XG5tb2R1bGUuZXhwb3J0cyA9IGRvbUFQSTsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCkge1xuICBpZiAoc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQpIHtcbiAgICBzdHlsZUVsZW1lbnQuc3R5bGVTaGVldC5jc3NUZXh0ID0gY3NzO1xuICB9IGVsc2Uge1xuICAgIHdoaWxlIChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCkge1xuICAgICAgc3R5bGVFbGVtZW50LnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKTtcbiAgICB9XG4gICAgc3R5bGVFbGVtZW50LmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcykpO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IHN0eWxlVGFnVHJhbnNmb3JtOyIsIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdHZhciBjYWNoZWRNb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdO1xuXHRpZiAoY2FjaGVkTW9kdWxlICE9PSB1bmRlZmluZWQpIHtcblx0XHRyZXR1cm4gY2FjaGVkTW9kdWxlLmV4cG9ydHM7XG5cdH1cblx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcblx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0gPSB7XG5cdFx0aWQ6IG1vZHVsZUlkLFxuXHRcdC8vIG5vIG1vZHVsZS5sb2FkZWQgbmVlZGVkXG5cdFx0ZXhwb3J0czoge31cblx0fTtcblxuXHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cblx0X193ZWJwYWNrX21vZHVsZXNfX1ttb2R1bGVJZF0obW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cblx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xufVxuXG4vLyBleHBvc2UgdGhlIG1vZHVsZXMgb2JqZWN0IChfX3dlYnBhY2tfbW9kdWxlc19fKVxuX193ZWJwYWNrX3JlcXVpcmVfXy5tID0gX193ZWJwYWNrX21vZHVsZXNfXztcblxuIiwiLy8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbl9fd2VicGFja19yZXF1aXJlX18ubiA9IChtb2R1bGUpID0+IHtcblx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG5cdFx0KCkgPT4gKG1vZHVsZVsnZGVmYXVsdCddKSA6XG5cdFx0KCkgPT4gKG1vZHVsZSk7XG5cdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsIHsgYTogZ2V0dGVyIH0pO1xuXHRyZXR1cm4gZ2V0dGVyO1xufTsiLCIvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSAoZXhwb3J0cywgZGVmaW5pdGlvbikgPT4ge1xuXHRmb3IodmFyIGtleSBpbiBkZWZpbml0aW9uKSB7XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGRlZmluaXRpb24sIGtleSkgJiYgIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBrZXkpKSB7XG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZGVmaW5pdGlvbltrZXldIH0pO1xuXHRcdH1cblx0fVxufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLmcgPSAoZnVuY3Rpb24oKSB7XG5cdGlmICh0eXBlb2YgZ2xvYmFsVGhpcyA9PT0gJ29iamVjdCcpIHJldHVybiBnbG9iYWxUaGlzO1xuXHR0cnkge1xuXHRcdHJldHVybiB0aGlzIHx8IG5ldyBGdW5jdGlvbigncmV0dXJuIHRoaXMnKSgpO1xuXHR9IGNhdGNoIChlKSB7XG5cdFx0aWYgKHR5cGVvZiB3aW5kb3cgPT09ICdvYmplY3QnKSByZXR1cm4gd2luZG93O1xuXHR9XG59KSgpOyIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IChvYmosIHByb3ApID0+IChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKSkiLCJ2YXIgc2NyaXB0VXJsO1xuaWYgKF9fd2VicGFja19yZXF1aXJlX18uZy5pbXBvcnRTY3JpcHRzKSBzY3JpcHRVcmwgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmcubG9jYXRpb24gKyBcIlwiO1xudmFyIGRvY3VtZW50ID0gX193ZWJwYWNrX3JlcXVpcmVfXy5nLmRvY3VtZW50O1xuaWYgKCFzY3JpcHRVcmwgJiYgZG9jdW1lbnQpIHtcblx0aWYgKGRvY3VtZW50LmN1cnJlbnRTY3JpcHQpXG5cdFx0c2NyaXB0VXJsID0gZG9jdW1lbnQuY3VycmVudFNjcmlwdC5zcmM7XG5cdGlmICghc2NyaXB0VXJsKSB7XG5cdFx0dmFyIHNjcmlwdHMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcInNjcmlwdFwiKTtcblx0XHRpZihzY3JpcHRzLmxlbmd0aCkgc2NyaXB0VXJsID0gc2NyaXB0c1tzY3JpcHRzLmxlbmd0aCAtIDFdLnNyY1xuXHR9XG59XG4vLyBXaGVuIHN1cHBvcnRpbmcgYnJvd3NlcnMgd2hlcmUgYW4gYXV0b21hdGljIHB1YmxpY1BhdGggaXMgbm90IHN1cHBvcnRlZCB5b3UgbXVzdCBzcGVjaWZ5IGFuIG91dHB1dC5wdWJsaWNQYXRoIG1hbnVhbGx5IHZpYSBjb25maWd1cmF0aW9uXG4vLyBvciBwYXNzIGFuIGVtcHR5IHN0cmluZyAoXCJcIikgYW5kIHNldCB0aGUgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gdmFyaWFibGUgZnJvbSB5b3VyIGNvZGUgdG8gdXNlIHlvdXIgb3duIGxvZ2ljLlxuaWYgKCFzY3JpcHRVcmwpIHRocm93IG5ldyBFcnJvcihcIkF1dG9tYXRpYyBwdWJsaWNQYXRoIGlzIG5vdCBzdXBwb3J0ZWQgaW4gdGhpcyBicm93c2VyXCIpO1xuc2NyaXB0VXJsID0gc2NyaXB0VXJsLnJlcGxhY2UoLyMuKiQvLCBcIlwiKS5yZXBsYWNlKC9cXD8uKiQvLCBcIlwiKS5yZXBsYWNlKC9cXC9bXlxcL10rJC8sIFwiL1wiKTtcbl9fd2VicGFja19yZXF1aXJlX18ucCA9IHNjcmlwdFVybDsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLmIgPSBkb2N1bWVudC5iYXNlVVJJIHx8IHNlbGYubG9jYXRpb24uaHJlZjtcblxuLy8gb2JqZWN0IHRvIHN0b3JlIGxvYWRlZCBhbmQgbG9hZGluZyBjaHVua3Ncbi8vIHVuZGVmaW5lZCA9IGNodW5rIG5vdCBsb2FkZWQsIG51bGwgPSBjaHVuayBwcmVsb2FkZWQvcHJlZmV0Y2hlZFxuLy8gW3Jlc29sdmUsIHJlamVjdCwgUHJvbWlzZV0gPSBjaHVuayBsb2FkaW5nLCAwID0gY2h1bmsgbG9hZGVkXG52YXIgaW5zdGFsbGVkQ2h1bmtzID0ge1xuXHQxNzk6IDBcbn07XG5cbi8vIG5vIGNodW5rIG9uIGRlbWFuZCBsb2FkaW5nXG5cbi8vIG5vIHByZWZldGNoaW5nXG5cbi8vIG5vIHByZWxvYWRlZFxuXG4vLyBubyBITVJcblxuLy8gbm8gSE1SIG1hbmlmZXN0XG5cbi8vIG5vIG9uIGNodW5rcyBsb2FkZWRcblxuLy8gbm8ganNvbnAgZnVuY3Rpb24iLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm5jID0gdW5kZWZpbmVkOyIsImNvbnN0IFVJID0gKCkgPT4ge1xyXG4gIGNvbnN0IGJvZHkgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiYm9keVwiKTtcclxuXHJcbiAgY29uc3QgZ2VuZXJhdGVVSSA9IChwbGF5ZXIsIGNvbXAsIHN0YXJ0VGhlR2FtZSkgPT4ge1xyXG4gICAgYm9keS5yZXBsYWNlQ2hpbGRyZW4oKTtcclxuICAgIGJvZHkuYXBwZW5kKGhlYWRlcigpLCBtYWluKHBsYXllciwgY29tcCwgc3RhcnRUaGVHYW1lKSwgZm9vdGVyKCkpO1xyXG4gICAgY29uZmlndXJlVGhlUGxheWVyQm9hcmQocGxheWVyKTtcclxuICB9O1xyXG5cclxuICBjb25zdCBoZWFkZXIgPSAoKSA9PiB7XHJcbiAgICBjb25zdCBoZWFkZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaGVhZGVyXCIpO1xyXG4gICAgY29uc3QgbWFpbkhlYWRpbmcgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaDFcIik7XHJcblxyXG4gICAgbWFpbkhlYWRpbmcudGV4dENvbnRlbnQgPSBcIk9rZWFub3MgV2FyXCI7XHJcblxyXG4gICAgaGVhZGVyLmFwcGVuZENoaWxkKG1haW5IZWFkaW5nKTtcclxuXHJcbiAgICByZXR1cm4gaGVhZGVyO1xyXG4gIH07XHJcblxyXG4gIGNvbnN0IG1haW4gPSAocGxheWVyLCBjb21wLCBzdGFydFRoZUdhbWUpID0+IHtcclxuICAgIGNvbnN0IG1haW4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwibWFpblwiKTtcclxuICAgIGNvbnN0IG1haW5EaXNwbGF5ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNlY3Rpb25cIik7XHJcbiAgICBjb25zdCBjb250cm9sbGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNlY3Rpb25cIik7XHJcblxyXG4gICAgbWFpbkRpc3BsYXkuY2xhc3NMaXN0LmFkZChcIm1haW4tZGlzcGxheVwiKTtcclxuICAgIGNvbnRyb2xsZXIuY2xhc3NMaXN0LmFkZChcImNvbnRyb2xsZXJcIik7XHJcblxyXG4gICAgLy8gQ29udHJvbGxlclxyXG5cclxuICAgIGNvbnN0IHJlc2V0QnRuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiKTtcclxuICAgIGNvbnN0IHN0YXJ0QnRuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiKTtcclxuXHJcbiAgICByZXNldEJ0bi5jbGFzc0xpc3QuYWRkKFwicmVzZXRcIik7XHJcbiAgICBzdGFydEJ0bi5jbGFzc0xpc3QuYWRkKFwic3RhcnRcIik7XHJcblxyXG4gICAgcmVzZXRCdG4udG9nZ2xlQXR0cmlidXRlKFwiZGlzYWJsZWRcIik7XHJcbiAgICBzdGFydEJ0bi50b2dnbGVBdHRyaWJ1dGUoXCJkaXNhYmxlZFwiKTtcclxuXHJcbiAgICByZXNldEJ0bi50ZXh0Q29udGVudCA9IFwiUmVzZXRcIjtcclxuICAgIHN0YXJ0QnRuLnRleHRDb250ZW50ID0gXCJTdGFydFwiO1xyXG5cclxuICAgIHJlc2V0QnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgICAgIHBsYXllci5yZXNldEJvYXJkKCk7XHJcbiAgICAgIGNvbXAucmVzZXRCb2FyZCgpO1xyXG4gICAgICBjb25maWd1cmVUaGVQbGF5ZXJCb2FyZChwbGF5ZXIpO1xyXG5cclxuICAgICAgcmVzZXRCdG4udG9nZ2xlQXR0cmlidXRlKFwiZGlzYWJsZWRcIik7XHJcbiAgICB9KTtcclxuXHJcbiAgICBzdGFydEJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gICAgICBzdGFydFRoZUdhbWUoKTtcclxuXHJcbiAgICAgIHJlc2V0QnRuLnRvZ2dsZUF0dHJpYnV0ZShcImRpc2FibGVkXCIpO1xyXG4gICAgICBzdGFydEJ0bi50b2dnbGVBdHRyaWJ1dGUoXCJkaXNhYmxlZFwiKTtcclxuICAgIH0pO1xyXG5cclxuICAgIGNvbnRyb2xsZXIuYXBwZW5kKHN0YXJ0QnRuLCByZXNldEJ0bik7XHJcblxyXG4gICAgLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcbiAgICBtYWluLmFwcGVuZChtYWluRGlzcGxheSwgY29udHJvbGxlcik7XHJcblxyXG4gICAgcmV0dXJuIG1haW47XHJcbiAgfTtcclxuXHJcbiAgY29uc3QgY29uZmlndXJlVGhlUGxheWVyQm9hcmQgPSAocGxheWVyKSA9PiB7XHJcbiAgICBjb25zdCBtYWluRGlzcGxheSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubWFpbi1kaXNwbGF5XCIpO1xyXG4gICAgY29uc3QgY29uZmlnID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcclxuICAgIGNvbnN0IGNvbmZpZ0NvbnRyb2xzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcclxuICAgIGNvbnN0IHNoaXBzVG9QbGFjZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XHJcbiAgICBjb25zdCBzdGFydEJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuc3RhcnRcIik7XHJcblxyXG4gICAgY29uZmlnLmNsYXNzTGlzdC5hZGQoXCJjb25maWdcIik7XHJcbiAgICBjb25maWdDb250cm9scy5jbGFzc0xpc3QuYWRkKFwiY29uZmlnLWNvbnRyb2xzXCIpO1xyXG4gICAgc2hpcHNUb1BsYWNlLmNsYXNzTGlzdC5hZGQoXCJzaGlwc1wiKTtcclxuXHJcbiAgICBjb25zdCByYW5kb21CdG4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpO1xyXG4gICAgY29uc3QgY2xlYXJCdG4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpO1xyXG5cclxuICAgIGNsZWFyQnRuLnRvZ2dsZUF0dHJpYnV0ZShcImRpc2FibGVkXCIpO1xyXG5cclxuICAgIHJhbmRvbUJ0bi50ZXh0Q29udGVudCA9IFwiUmFuZG9tXCI7XHJcbiAgICBjbGVhckJ0bi50ZXh0Q29udGVudCA9IFwiQ2xlYXJcIjtcclxuXHJcbiAgICByYW5kb21CdG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICAgICAgcGxheWVyLnJlc2V0Qm9hcmQoKTtcclxuICAgICAgcGxheWVyLnBsYWNlUmFuZG9tU2hpcHMoKTtcclxuXHJcbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgMTA7IGkrKykge1xyXG4gICAgICAgIGZvciAobGV0IGogPSAwOyBqIDwgMTA7IGorKykge1xyXG4gICAgICAgICAgY29uc3QgYm9hcmRGaWVsZCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXHJcbiAgICAgICAgICAgIGAuYm9hcmQtZmllbGRbZGF0YS1yb3c9XCIke2l9XCJdW2RhdGEtY29sPVwiJHtqfVwiXWBcclxuICAgICAgICAgICk7XHJcbiAgICAgICAgICBib2FyZEZpZWxkLnNldEF0dHJpYnV0ZShcclxuICAgICAgICAgICAgXCJoYXMtc2hpcFwiLFxyXG4gICAgICAgICAgICBwbGF5ZXIucGxheWVyQm9hcmQuYm9hcmRbaV1bal0uaGFzU2hpcCA/IFwidHJ1ZVwiIDogXCJmYWxzZVwiXHJcbiAgICAgICAgICApO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG5cclxuICAgICAgY2xlYXJCdG4uaGFzQXR0cmlidXRlKFwiZGlzYWJsZWRcIikgJiYgY2xlYXJCdG4udG9nZ2xlQXR0cmlidXRlKFwiZGlzYWJsZWRcIik7XHJcbiAgICAgIHN0YXJ0QnRuLmhhc0F0dHJpYnV0ZShcImRpc2FibGVkXCIpICYmIHN0YXJ0QnRuLnRvZ2dsZUF0dHJpYnV0ZShcImRpc2FibGVkXCIpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgY2xlYXJCdG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICAgICAgcGxheWVyLnJlc2V0Qm9hcmQoKTtcclxuXHJcbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgMTA7IGkrKykge1xyXG4gICAgICAgIGZvciAobGV0IGogPSAwOyBqIDwgMTA7IGorKykge1xyXG4gICAgICAgICAgY29uc3QgYm9hcmRGaWVsZCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXHJcbiAgICAgICAgICAgIGAuYm9hcmQtZmllbGRbZGF0YS1yb3c9XCIke2l9XCJdW2RhdGEtY29sPVwiJHtqfVwiXWBcclxuICAgICAgICAgICk7XHJcbiAgICAgICAgICBib2FyZEZpZWxkLnJlbW92ZUF0dHJpYnV0ZShcImhhcy1zaGlwXCIpO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG5cclxuICAgICAgY2xlYXJCdG4udG9nZ2xlQXR0cmlidXRlKFwiZGlzYWJsZWRcIik7XHJcbiAgICAgIHN0YXJ0QnRuLnRvZ2dsZUF0dHJpYnV0ZShcImRpc2FibGVkXCIpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgY29uZmlnQ29udHJvbHMuYXBwZW5kKHJhbmRvbUJ0biwgY2xlYXJCdG4pO1xyXG5cclxuICAgIGNvbmZpZy5hcHBlbmQoY29uZmlnQ29udHJvbHMsIGJvYXJkKFwiY29uZmlnXCIpLCBzaGlwc1RvUGxhY2UpO1xyXG5cclxuICAgIG1haW5EaXNwbGF5LnJlcGxhY2VDaGlsZHJlbigpO1xyXG4gICAgbWFpbkRpc3BsYXkuYXBwZW5kQ2hpbGQoY29uZmlnKTtcclxuICB9O1xyXG5cclxuICBjb25zdCBnZW5lcmF0ZUJvYXJkcyA9IChwbGF5ZXIsIGNvbXAsIGdhbWVMb29wKSA9PiB7XHJcbiAgICBjb25zdCBtYWluRGlzcGxheSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubWFpbi1kaXNwbGF5XCIpO1xyXG5cclxuICAgIG1haW5EaXNwbGF5LnJlcGxhY2VDaGlsZHJlbigpO1xyXG4gICAgbWFpbkRpc3BsYXkuYXBwZW5kKFxyXG4gICAgICBib2FyZChcInBsYXllclwiLCBjb21wLCBwbGF5ZXIpLFxyXG4gICAgICBib2FyZChcImNvbXBcIiwgcGxheWVyLCBjb21wLCBnYW1lTG9vcCwgdHJ1ZSlcclxuICAgICk7XHJcbiAgfTtcclxuXHJcbiAgY29uc3QgYm9hcmQgPSAoYm9hcmROYW1lLCBwbGF5ZXIsIGVuZW15LCBnYW1lTG9vcCwgaXNDbGlja2FibGUgPSBmYWxzZSkgPT4ge1xyXG4gICAgY29uc3QgYm9hcmQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xyXG4gICAgYm9hcmQuY2xhc3NMaXN0LmFkZChcImJvYXJkXCIsIGAke2JvYXJkTmFtZX0tYm9hcmRgKTtcclxuICAgIGlzQ2xpY2thYmxlICYmIGJvYXJkLnRvZ2dsZUF0dHJpYnV0ZShcInVuZGVyLWF0dGFja1wiKTtcclxuXHJcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IDEwOyBpKyspIHtcclxuICAgICAgZm9yIChsZXQgaiA9IDA7IGogPCAxMDsgaisrKSB7XHJcbiAgICAgICAgY29uc3QgYm9hcmRGaWVsZCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XHJcbiAgICAgICAgYm9hcmRGaWVsZC5jbGFzc0xpc3QuYWRkKFwiYm9hcmQtZmllbGRcIik7XHJcbiAgICAgICAgYm9hcmRGaWVsZC5zZXRBdHRyaWJ1dGUoXCJkYXRhLXJvd1wiLCBpKTtcclxuICAgICAgICBib2FyZEZpZWxkLnNldEF0dHJpYnV0ZShcImRhdGEtY29sXCIsIGopO1xyXG5cclxuICAgICAgICBpZiAocGxheWVyKSB7XHJcbiAgICAgICAgICBib2FyZEZpZWxkLnNldEF0dHJpYnV0ZShcImhpdFwiLCBcImZhbHNlXCIpO1xyXG4gICAgICAgICAgYm9hcmRGaWVsZC5zZXRBdHRyaWJ1dGUoXHJcbiAgICAgICAgICAgIFwiaGFzLXNoaXBcIixcclxuICAgICAgICAgICAgcGxheWVyLmVuZW15Qm9hcmQuYm9hcmRbaV1bal0uaGFzU2hpcCA/IFwidHJ1ZVwiIDogXCJmYWxzZVwiXHJcbiAgICAgICAgICApO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKGlzQ2xpY2thYmxlKSB7XHJcbiAgICAgICAgICBib2FyZEZpZWxkLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgICAgICAgICAgIGdhbWVMb29wKHBsYXllciwgZW5lbXksIFtpLCBqXSwgdXBkYXRlSGl0dGVuRmllbGQpO1xyXG4gICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBib2FyZC5hcHBlbmRDaGlsZChib2FyZEZpZWxkKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBib2FyZDtcclxuICB9O1xyXG5cclxuICBjb25zdCB1cGRhdGVIaXR0ZW5GaWVsZCA9IChwbGF5ZXJOYW1lLCBlbmVteU5hbWUsIGNvb3JkLCBuZWlnaGJvdXJzKSA9PiB7XHJcbiAgICBjb25zdCBwbGF5ZXJCb2FyZCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYC4ke3BsYXllck5hbWV9LWJvYXJkYCk7XHJcbiAgICBjb25zdCBlbmVteUJvYXJkID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgLiR7ZW5lbXlOYW1lfS1ib2FyZGApO1xyXG4gICAgY29uc3QgZmllbGRUb1VwZGF0ZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXHJcbiAgICAgIGAuJHtlbmVteU5hbWV9LWJvYXJkIC5ib2FyZC1maWVsZFtkYXRhLXJvdz1cIiR7Y29vcmRbMF19XCJdW2RhdGEtY29sPVwiJHtjb29yZFsxXX1cIl1gXHJcbiAgICApO1xyXG5cclxuICAgIGZpZWxkVG9VcGRhdGUuc2V0QXR0cmlidXRlKFwiaGl0XCIsIFwidHJ1ZVwiKTtcclxuXHJcbiAgICBmb3IgKGNvbnN0IG5laWdoYm91ciBvZiBuZWlnaGJvdXJzKSB7XHJcbiAgICAgIGNvbnN0IG5laWdoYm91clRvVXBkYXRlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcclxuICAgICAgICBgLiR7ZW5lbXlOYW1lfS1ib2FyZCAuYm9hcmQtZmllbGRbZGF0YS1yb3c9XCIke25laWdoYm91ci5yb3d9XCJdW2RhdGEtY29sPVwiJHtuZWlnaGJvdXIuY29sfVwiXWBcclxuICAgICAgKTtcclxuXHJcbiAgICAgIG5laWdoYm91clRvVXBkYXRlLnNldEF0dHJpYnV0ZShcImhpdFwiLCBcInRydWVcIik7XHJcbiAgICB9XHJcblxyXG4gICAgZW5lbXlCb2FyZC50b2dnbGVBdHRyaWJ1dGUoXCJ1bmRlci1hdHRhY2tcIik7XHJcbiAgICBwbGF5ZXJCb2FyZC50b2dnbGVBdHRyaWJ1dGUoXCJ1bmRlci1hdHRhY2tcIik7XHJcbiAgfTtcclxuXHJcbiAgY29uc3QgZW5kVGhlR2FtZSA9IChyZXN1bHQpID0+IHtcclxuICAgIGNvbnN0IG1haW5EaXNwbGF5ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5tYWluLWRpc3BsYXlcIik7XHJcbiAgICBjb25zdCB3aW5uaW5nTWVzc2FnZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJwXCIpO1xyXG5cclxuICAgIHdpbm5pbmdNZXNzYWdlLmNsYXNzTGlzdC5hZGQoXCJ3aW5uaW5nLW1lc3NhZ2VcIik7XHJcblxyXG4gICAgd2lubmluZ01lc3NhZ2UudGV4dENvbnRlbnQgPSBgWW91ICR7cmVzdWx0fSEhIWA7XHJcblxyXG4gICAgbWFpbkRpc3BsYXkucmVwbGFjZUNoaWxkcmVuKCk7XHJcbiAgICBtYWluRGlzcGxheS5hcHBlbmRDaGlsZCh3aW5uaW5nTWVzc2FnZSk7XHJcbiAgfTtcclxuXHJcbiAgY29uc3QgZm9vdGVyID0gKCkgPT4ge1xyXG4gICAgY29uc3QgZm9vdGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImZvb3RlclwiKTtcclxuICAgIGNvbnN0IGNvcHlyaWdodCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzbWFsbFwiKTtcclxuXHJcbiAgICBjb3B5cmlnaHQudGV4dENvbnRlbnQgPSBcIkNvcHlyaWdodCDCqSAyMDIzIFZpY3RvckVYMTNcIjtcclxuXHJcbiAgICBmb290ZXIuYXBwZW5kQ2hpbGQoY29weXJpZ2h0KTtcclxuXHJcbiAgICByZXR1cm4gZm9vdGVyO1xyXG4gIH07XHJcblxyXG4gIHJldHVybiB7IGdlbmVyYXRlVUksIGdlbmVyYXRlQm9hcmRzLCBlbmRUaGVHYW1lIH07XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBVSTtcclxuIiwiaW1wb3J0IFNoaXAgZnJvbSBcIi4uL3NoaXAvc2hpcFwiO1xyXG5cclxuY29uc3QgR2FtZUJvYXJkID0gKCkgPT4ge1xyXG4gIGxldCBzaGlwc09uVGhlQm9hcmQgPSAwO1xyXG4gIGxldCBwbGFjZVZlcnRpY2FsbHkgPSBmYWxzZTtcclxuXHJcbiAgY29uc3QgaW5jcmVtZW50TnVtYmVyT2ZTaGlwcyA9ICgpID0+IHtcclxuICAgIHNoaXBzT25UaGVCb2FyZCsrO1xyXG4gIH07XHJcblxyXG4gIGNvbnN0IHN3aXRjaFNoaXBEaXJlY3Rpb24gPSAoKSA9PiB7XHJcbiAgICBpZiAocGxhY2VWZXJ0aWNhbGx5KSB7XHJcbiAgICAgIHBsYWNlVmVydGljYWxseSA9IGZhbHNlO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgcGxhY2VWZXJ0aWNhbGx5ID0gdHJ1ZTtcclxuICAgIH1cclxuICB9O1xyXG5cclxuICBjb25zdCBnZW5lcmF0ZUJvYXJkID0gKCkgPT4ge1xyXG4gICAgY29uc3QgZGVmYXVsdEJvYXJkID0gW107XHJcblxyXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCAxMDsgaSsrKSB7XHJcbiAgICAgIGNvbnN0IHJvdyA9IFtdO1xyXG4gICAgICBmb3IgKGxldCBqID0gMDsgaiA8IDEwOyBqKyspIHtcclxuICAgICAgICByb3cucHVzaCh7IGhhc1NoaXA6IGZhbHNlLCBoaXR0ZW46IGZhbHNlLCByb3c6IGksIGNvbDogaiB9KTtcclxuICAgICAgfVxyXG4gICAgICBkZWZhdWx0Qm9hcmQucHVzaChyb3cpO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBkZWZhdWx0Qm9hcmQ7XHJcbiAgfTtcclxuXHJcbiAgY29uc3QgYm9hcmQgPSBnZW5lcmF0ZUJvYXJkKCk7XHJcblxyXG4gIGNvbnN0IGdldE5laWdoYm91ckNvb3JkaW5hdGVzID0gKGNvb3JkLCBzaGlwTGVuZ3RoKSA9PiB7XHJcbiAgICBjb25zdCByZXN1bHQgPSBbXTtcclxuICAgIGNvbnN0IHNoaXBJbmRleCA9IGJvYXJkW2Nvb3JkWzBdXVtjb29yZFsxXV0uc2hpcEluZGV4O1xyXG4gICAgY29uc3QgcGxhY2luZ1ZlcnRpY2FsbHkgPSBib2FyZFtjb29yZFswXV1bY29vcmRbMV1dLnNoaXBPblZlcnRpY2FsO1xyXG4gICAgbGV0IHJvd09mZnNldDtcclxuICAgIGxldCBjb2x1bW5PZmZzZXQ7XHJcbiAgICBsZXQgbWFpbkF4aXM7XHJcbiAgICBsZXQgY3Jvc3NBeGlzO1xyXG5cclxuICAgIGlmICghcGxhY2luZ1ZlcnRpY2FsbHkpIHtcclxuICAgICAgbWFpbkF4aXMgPSBjb29yZFswXTtcclxuICAgICAgY3Jvc3NBeGlzID0gY29vcmRbMV0gLSBzaGlwSW5kZXg7XHJcblxyXG4gICAgICBpZiAoY3Jvc3NBeGlzIC0gMSA+PSAwKSB7XHJcbiAgICAgICAgcmVzdWx0LnB1c2goYm9hcmRbY29vcmRbMF1dW2Nvb3JkWzFdIC0gc2hpcEluZGV4IC0gMV0pO1xyXG4gICAgICB9XHJcbiAgICAgIGlmIChjcm9zc0F4aXMgKyBzaGlwTGVuZ3RoIDwgMTApIHtcclxuICAgICAgICByZXN1bHQucHVzaChib2FyZFtjb29yZFswXV1bY29vcmRbMV0gLSBzaGlwSW5kZXggKyBzaGlwTGVuZ3RoXSk7XHJcbiAgICAgIH1cclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIG1haW5BeGlzID0gY29vcmRbMV07XHJcbiAgICAgIGNyb3NzQXhpcyA9IGNvb3JkWzBdIC0gc2hpcEluZGV4O1xyXG5cclxuICAgICAgaWYgKGNyb3NzQXhpcyAtIDEgPj0gMCkge1xyXG4gICAgICAgIHJlc3VsdC5wdXNoKGJvYXJkW2Nvb3JkWzBdIC0gc2hpcEluZGV4IC0gMV1bY29vcmRbMV1dKTtcclxuICAgICAgfVxyXG4gICAgICBpZiAoY3Jvc3NBeGlzICsgc2hpcExlbmd0aCA8IDEwKSB7XHJcbiAgICAgICAgcmVzdWx0LnB1c2goYm9hcmRbY29vcmRbMF0gLSBzaGlwSW5kZXggKyBzaGlwTGVuZ3RoXVtjb29yZFsxXV0pO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgZm9yIChsZXQgaSA9IC0xOyBpIDw9IHNoaXBMZW5ndGg7IGkrKykge1xyXG4gICAgICBpZiAoY3Jvc3NBeGlzICsgaSA+PSAwICYmIGNyb3NzQXhpcyArIGkgPCAxMCkge1xyXG4gICAgICAgIGlmICghcGxhY2luZ1ZlcnRpY2FsbHkpIHtcclxuICAgICAgICAgIHJvd09mZnNldCA9IC0xO1xyXG4gICAgICAgICAgY29sdW1uT2Zmc2V0ID0gaSAtIHNoaXBJbmRleDtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgcm93T2Zmc2V0ID0gaSAtIHNoaXBJbmRleDtcclxuICAgICAgICAgIGNvbHVtbk9mZnNldCA9IC0xO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKG1haW5BeGlzIC0gMSA+PSAwKSB7XHJcbiAgICAgICAgICByZXN1bHQucHVzaChib2FyZFtjb29yZFswXSArIHJvd09mZnNldF1bY29vcmRbMV0gKyBjb2x1bW5PZmZzZXRdKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKG1haW5BeGlzICsgMSA8IDEwKSB7XHJcbiAgICAgICAgICByZXN1bHQucHVzaChcclxuICAgICAgICAgICAgYm9hcmRbXHJcbiAgICAgICAgICAgICAgY29vcmRbMF0gKyAoIXBsYWNpbmdWZXJ0aWNhbGx5ID8gTWF0aC5hYnMocm93T2Zmc2V0KSA6IHJvd09mZnNldClcclxuICAgICAgICAgICAgXVtcclxuICAgICAgICAgICAgICBjb29yZFsxXSArXHJcbiAgICAgICAgICAgICAgICAocGxhY2luZ1ZlcnRpY2FsbHkgPyBNYXRoLmFicyhjb2x1bW5PZmZzZXQpIDogY29sdW1uT2Zmc2V0KVxyXG4gICAgICAgICAgICBdXHJcbiAgICAgICAgICApO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiByZXN1bHQ7XHJcbiAgfTtcclxuXHJcbiAgY29uc3QgZ2V0U2hpcENvb3JkaW5hdGVzID0gKGNvb3JkLCBzaGlwTGVuZ3RoKSA9PiB7XHJcbiAgICBjb25zdCByZXN1bHQgPSBbXTtcclxuXHJcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHNoaXBMZW5ndGg7IGkrKykge1xyXG4gICAgICBpZiAocGxhY2VWZXJ0aWNhbGx5ICYmIGNvb3JkWzBdICsgaSA8IDEwKSB7XHJcbiAgICAgICAgcmVzdWx0LnB1c2goYm9hcmRbY29vcmRbMF0gKyBpXVtjb29yZFsxXV0pO1xyXG4gICAgICB9IGVsc2UgaWYgKCFwbGFjZVZlcnRpY2FsbHkgJiYgY29vcmRbMV0gKyBpIDwgMTApIHtcclxuICAgICAgICByZXN1bHQucHVzaChib2FyZFtjb29yZFswXV1bY29vcmRbMV0gKyBpXSk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gcmVzdWx0O1xyXG4gIH07XHJcblxyXG4gIGNvbnN0IGlzQVZhbGlkQ29vcmRpbmF0ZSA9IChjb29yZCwgc2hpcExlbmd0aCkgPT4ge1xyXG4gICAgaWYgKFxyXG4gICAgICBnZXRTaGlwQ29vcmRpbmF0ZXMoY29vcmQsIHNoaXBMZW5ndGgpLmV2ZXJ5KFxyXG4gICAgICAgIChjb29yZCkgPT5cclxuICAgICAgICAgICFjb29yZC5oYXNTaGlwICYmXHJcbiAgICAgICAgICAhY29vcmQuZmlyc3ROZWlnaGJvdXIgJiZcclxuICAgICAgICAgICFjb29yZC5zZWNvbmROZWlnaGJvdXIgJiZcclxuICAgICAgICAgICFjb29yZC50aGlyZE5laWdoYm91clxyXG4gICAgICApICYmXHJcbiAgICAgIGNvb3JkWzBdID49IDAgJiZcclxuICAgICAgY29vcmRbMV0gPj0gMCAmJlxyXG4gICAgICAoKHBsYWNlVmVydGljYWxseSAmJiBjb29yZFswXSArIHNoaXBMZW5ndGggLSAxIDwgMTAgJiYgY29vcmRbMV0gPCAxMCkgfHxcclxuICAgICAgICAoIXBsYWNlVmVydGljYWxseSAmJiBjb29yZFswXSA8IDEwICYmIGNvb3JkWzFdICsgc2hpcExlbmd0aCAtIDEgPCAxMCkpXHJcbiAgICApIHtcclxuICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICB9XHJcbiAgfTtcclxuXHJcbiAgY29uc3QgcGxhY2VTaGlwID0gKGNvb3JkLCBzaGlwTGVuZ3RoKSA9PiB7XHJcbiAgICBpZiAoaXNBVmFsaWRDb29yZGluYXRlKGNvb3JkLCBzaGlwTGVuZ3RoKSkge1xyXG4gICAgICBjb25zdCByb3cgPSBjb29yZFswXTtcclxuICAgICAgY29uc3QgY29sdW1uID0gY29vcmRbMV07XHJcblxyXG4gICAgICBib2FyZFtyb3ddW2NvbHVtbl0uaGFzU2hpcCA9IHRydWU7XHJcbiAgICAgIGJvYXJkW3Jvd11bY29sdW1uXS5zaGlwID0gU2hpcChzaGlwTGVuZ3RoKTtcclxuICAgICAgYm9hcmRbcm93XVtjb2x1bW5dLnNoaXBJbmRleCA9IDA7XHJcbiAgICAgIGJvYXJkW3Jvd11bY29sdW1uXS5zaGlwT25WZXJ0aWNhbCA9IHBsYWNlVmVydGljYWxseTtcclxuXHJcbiAgICAgIGlmICghcGxhY2VWZXJ0aWNhbGx5KSB7XHJcbiAgICAgICAgZm9yIChsZXQgaSA9IDE7IGkgPCBzaGlwTGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgIGJvYXJkW3Jvd11bY29sdW1uICsgaV0uaGFzU2hpcCA9IHRydWU7XHJcbiAgICAgICAgICBib2FyZFtyb3ddW2NvbHVtbiArIGldLnNoaXAgPSBib2FyZFtyb3ddW2NvbHVtbl0uc2hpcDtcclxuICAgICAgICAgIGJvYXJkW3Jvd11bY29sdW1uICsgaV0uc2hpcEluZGV4ID0gaTtcclxuICAgICAgICAgIGJvYXJkW3Jvd11bY29sdW1uICsgaV0uc2hpcE9uVmVydGljYWwgPSBwbGFjZVZlcnRpY2FsbHk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIGZvciAobGV0IGkgPSAxOyBpIDwgc2hpcExlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICBib2FyZFtyb3cgKyBpXVtjb2x1bW5dLmhhc1NoaXAgPSB0cnVlO1xyXG4gICAgICAgICAgYm9hcmRbcm93ICsgaV1bY29sdW1uXS5zaGlwID0gYm9hcmRbcm93XVtjb2x1bW5dLnNoaXA7XHJcbiAgICAgICAgICBib2FyZFtyb3cgKyBpXVtjb2x1bW5dLnNoaXBJbmRleCA9IGk7XHJcbiAgICAgICAgICBib2FyZFtyb3cgKyBpXVtjb2x1bW5dLnNoaXBPblZlcnRpY2FsID0gcGxhY2VWZXJ0aWNhbGx5O1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG5cclxuICAgICAgY29uc3QgbmVpZ2hib3VycyA9IGdldE5laWdoYm91ckNvb3JkaW5hdGVzKGNvb3JkLCBzaGlwTGVuZ3RoKTtcclxuXHJcbiAgICAgIGZvciAoY29uc3QgbmVpZ2hib3VyIG9mIG5laWdoYm91cnMpIHtcclxuICAgICAgICAhbmVpZ2hib3VyLmZpcnN0TmVpZ2hib3VyXHJcbiAgICAgICAgICA/IChuZWlnaGJvdXIuZmlyc3ROZWlnaGJvdXIgPSBib2FyZFtyb3ddW2NvbHVtbl0uc2hpcClcclxuICAgICAgICAgIDogIW5laWdoYm91ci5zZWNvbmROZWlnaGJvdXJcclxuICAgICAgICAgID8gKG5laWdoYm91ci5zZWNvbmROZWlnaGJvdXIgPSBib2FyZFtyb3ddW2NvbHVtbl0uc2hpcClcclxuICAgICAgICAgIDogKG5laWdoYm91ci50aGlyZE5laWdoYm91ciA9IGJvYXJkW3Jvd11bY29sdW1uXS5zaGlwKTtcclxuICAgICAgfVxyXG5cclxuICAgICAgaW5jcmVtZW50TnVtYmVyT2ZTaGlwcygpO1xyXG4gICAgfVxyXG4gIH07XHJcblxyXG4gIGNvbnN0IHJlY2VpdmVBdHRhY2sgPSAoY29vcmQpID0+IHtcclxuICAgIGlmICghYm9hcmRbY29vcmRbMF1dW2Nvb3JkWzFdXS5oaXR0ZW4pIHtcclxuICAgICAgYm9hcmRbY29vcmRbMF1dW2Nvb3JkWzFdXS5oaXR0ZW4gPSB0cnVlO1xyXG5cclxuICAgICAgaWYgKGJvYXJkW2Nvb3JkWzBdXVtjb29yZFsxXV0uaGFzU2hpcCkge1xyXG4gICAgICAgIGJvYXJkW2Nvb3JkWzBdXVtjb29yZFsxXV0uc2hpcC5oaXQoKTtcclxuXHJcbiAgICAgICAgaWYgKGJvYXJkW2Nvb3JkWzBdXVtjb29yZFsxXV0uc2hpcC5pc1N1bmsoKSkge1xyXG4gICAgICAgICAgY29uc3QgaGl0U2hpcCA9IGJvYXJkW2Nvb3JkWzBdXVtjb29yZFsxXV0uc2hpcDtcclxuXHJcbiAgICAgICAgICBjb25zdCBuZWlnaGJvdXJzID0gYm9hcmRcclxuICAgICAgICAgICAgLmZsYXQoKVxyXG4gICAgICAgICAgICAuZmlsdGVyKFxyXG4gICAgICAgICAgICAgIChjb29yZCkgPT5cclxuICAgICAgICAgICAgICAgIGNvb3JkLmZpcnN0TmVpZ2hib3VyID09PSBoaXRTaGlwIHx8XHJcbiAgICAgICAgICAgICAgICBjb29yZC5zZWNvbmROZWlnaGJvdXIgPT09IGhpdFNoaXAgfHxcclxuICAgICAgICAgICAgICAgIGNvb3JkLnRoaXJkTmVpZ2hib3VyID09PSBoaXRTaGlwXHJcbiAgICAgICAgICAgICk7XHJcblxyXG4gICAgICAgICAgZm9yIChjb25zdCBuZWlnaGJvdXIgb2YgbmVpZ2hib3Vycykge1xyXG4gICAgICAgICAgICBuZWlnaGJvdXIuaGl0dGVuID0gdHJ1ZTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9O1xyXG5cclxuICBjb25zdCBpc0FsbFNoaXBzU3VuayA9ICgpID0+IHtcclxuICAgIGNvbnN0IGNvb3JkaW5hdGVzV2l0aFNoaXBzID0gYm9hcmRcclxuICAgICAgLmZsYXQoKVxyXG4gICAgICAuZmlsdGVyKChjb29yZGluYXRlKSA9PiBjb29yZGluYXRlLnNoaXApO1xyXG5cclxuICAgIHJldHVybiBjb29yZGluYXRlc1dpdGhTaGlwcy5ldmVyeSgoY29vcmRpbmF0ZSkgPT4gY29vcmRpbmF0ZS5zaGlwLmlzU3VuaygpKTtcclxuICB9O1xyXG5cclxuICByZXR1cm4ge1xyXG4gICAgZ2V0IGJvYXJkKCkge1xyXG4gICAgICByZXR1cm4gYm9hcmQ7XHJcbiAgICB9LFxyXG4gICAgZ2V0IHNoaXBzT25UaGVCb2FyZCgpIHtcclxuICAgICAgcmV0dXJuIHNoaXBzT25UaGVCb2FyZDtcclxuICAgIH0sXHJcbiAgICBnZXQgcGxhY2VWZXJ0aWNhbGx5KCkge1xyXG4gICAgICByZXR1cm4gcGxhY2VWZXJ0aWNhbGx5O1xyXG4gICAgfSxcclxuICAgIGdldFNoaXBDb29yZGluYXRlcyxcclxuICAgIGlzQVZhbGlkQ29vcmRpbmF0ZSxcclxuICAgIGdldE5laWdoYm91ckNvb3JkaW5hdGVzLFxyXG4gICAgcGxhY2VTaGlwLFxyXG4gICAgc3dpdGNoU2hpcERpcmVjdGlvbixcclxuICAgIHJlY2VpdmVBdHRhY2ssXHJcbiAgICBpc0FsbFNoaXBzU3VuayxcclxuICB9O1xyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgR2FtZUJvYXJkO1xyXG4iLCJjb25zdCBTaGlwID0gKHNoaXBMZW5ndGgpID0+IHtcclxuICBsZXQgaGl0cyA9IDA7XHJcblxyXG4gIGNvbnN0IGhpdCA9ICgpID0+IHtcclxuICAgIGhpdHMrKztcclxuICB9O1xyXG5cclxuICBjb25zdCBpc1N1bmsgPSAoKSA9PiB7XHJcbiAgICByZXR1cm4gc2hpcExlbmd0aCA9PT0gaGl0cztcclxuICB9O1xyXG5cclxuICByZXR1cm4ge1xyXG4gICAgc2hpcExlbmd0aCxcclxuICAgIGdldCBoaXRzKCkge1xyXG4gICAgICByZXR1cm4gaGl0cztcclxuICAgIH0sXHJcbiAgICBoaXQsXHJcbiAgICBpc1N1bmssXHJcbiAgfTtcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IFNoaXA7XHJcbiIsImltcG9ydCBHYW1lQm9hcmQgZnJvbSBcIi4uL2JvYXJkL2dhbWVCb2FyZFwiO1xyXG5cclxuY29uc3QgUGxheWVyID0gKGlzQ29tcCA9IGZhbHNlKSA9PiB7XHJcbiAgbGV0IHBsYXllckJvYXJkID0gR2FtZUJvYXJkKCk7XHJcbiAgbGV0IGVuZW15Qm9hcmQ7XHJcblxyXG4gIGNvbnN0IHJlc2V0Qm9hcmQgPSAoKSA9PiB7XHJcbiAgICBwbGF5ZXJCb2FyZCA9IEdhbWVCb2FyZCgpO1xyXG4gIH07XHJcblxyXG4gIGNvbnN0IHNldEVuZW15Qm9hcmQgPSAoYm9hcmQpID0+IHtcclxuICAgIGVuZW15Qm9hcmQgPSBib2FyZDtcclxuICB9O1xyXG5cclxuICBjb25zdCByYW5kb21Db29yZCA9ICgpID0+IHtcclxuICAgIHJldHVybiBbTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMTApLCBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAxMCldO1xyXG4gIH07XHJcblxyXG4gIGNvbnN0IHJhbmRvbURpcmVjdGlvblN3aXRjaCA9ICgpID0+IHtcclxuICAgIGlmIChNYXRoLnJhbmRvbSgpID49IDAuNSkge1xyXG4gICAgICBwbGF5ZXJCb2FyZC5zd2l0Y2hTaGlwRGlyZWN0aW9uKCk7XHJcbiAgICB9XHJcbiAgfTtcclxuXHJcbiAgY29uc3QgcGxhY2VSYW5kb21TaGlwcyA9ICgpID0+IHtcclxuICAgIHdoaWxlIChwbGF5ZXJCb2FyZC5zaGlwc09uVGhlQm9hcmQgPCAxMCkge1xyXG4gICAgICByYW5kb21EaXJlY3Rpb25Td2l0Y2goKTtcclxuXHJcbiAgICAgIHBsYXllckJvYXJkLnBsYWNlU2hpcChcclxuICAgICAgICByYW5kb21Db29yZCgpLFxyXG4gICAgICAgIHBsYXllckJvYXJkLnNoaXBzT25UaGVCb2FyZCA8IDRcclxuICAgICAgICAgID8gMVxyXG4gICAgICAgICAgOiBwbGF5ZXJCb2FyZC5zaGlwc09uVGhlQm9hcmQgPCA3XHJcbiAgICAgICAgICA/IDJcclxuICAgICAgICAgIDogcGxheWVyQm9hcmQuc2hpcHNPblRoZUJvYXJkIDwgOVxyXG4gICAgICAgICAgPyAzXHJcbiAgICAgICAgICA6IDRcclxuICAgICAgKTtcclxuICAgIH1cclxuICB9O1xyXG5cclxuICBjb25zdCBhdHRhY2sgPSAoY29vcmQpID0+IHtcclxuICAgIGlmICghaXNDb21wKSB7XHJcbiAgICAgIGVuZW15Qm9hcmQucmVjZWl2ZUF0dGFjayhjb29yZCk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBsZXQgY29vcmRUb0F0dGFjaztcclxuICAgICAgbGV0IGF0dGFja2VkID0gZmFsc2U7XHJcblxyXG4gICAgICB3aGlsZSAoIWF0dGFja2VkKSB7XHJcbiAgICAgICAgY29vcmRUb0F0dGFjayA9IHJhbmRvbUNvb3JkKCk7XHJcbiAgICAgICAgaWYgKCFlbmVteUJvYXJkLmJvYXJkW2Nvb3JkVG9BdHRhY2tbMF1dW2Nvb3JkVG9BdHRhY2tbMV1dLmhpdHRlbikge1xyXG4gICAgICAgICAgZW5lbXlCb2FyZC5yZWNlaXZlQXR0YWNrKGNvb3JkVG9BdHRhY2spO1xyXG4gICAgICAgICAgYXR0YWNrZWQgPSB0cnVlO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG5cclxuICAgICAgcmV0dXJuIGNvb3JkVG9BdHRhY2s7XHJcbiAgICB9XHJcbiAgfTtcclxuXHJcbiAgcmV0dXJuIHtcclxuICAgIGdldCBwbGF5ZXJCb2FyZCgpIHtcclxuICAgICAgcmV0dXJuIHBsYXllckJvYXJkO1xyXG4gICAgfSxcclxuICAgIGdldCBlbmVteUJvYXJkKCkge1xyXG4gICAgICByZXR1cm4gZW5lbXlCb2FyZDtcclxuICAgIH0sXHJcbiAgICByZXNldEJvYXJkLFxyXG4gICAgc2V0RW5lbXlCb2FyZCxcclxuICAgIHBsYWNlUmFuZG9tU2hpcHMsXHJcbiAgICBhdHRhY2ssXHJcbiAgfTtcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IFBsYXllcjtcclxuIiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL21haW4uY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9tYWluLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsImltcG9ydCBVSSBmcm9tIFwiLi9tb2R1bGVzL1VJL1VJXCI7XHJcbmltcG9ydCBQbGF5ZXIgZnJvbSBcIi4vbW9kdWxlcy9wbGF5ZXIvcGxheWVyXCI7XHJcbmltcG9ydCBcIi4vc3R5bGVzL21haW4uY3NzXCI7XHJcblxyXG5jb25zdCBtYWluID0gKCkgPT4ge1xyXG4gIGNvbnN0IHVzZXJJbnRlcmZhY2UgPSBVSSgpO1xyXG4gIGNvbnN0IHBsYXllciA9IFBsYXllcigpO1xyXG4gIGNvbnN0IGNvbXAgPSBQbGF5ZXIodHJ1ZSk7XHJcblxyXG4gIGNvbnN0IHN0YXJ0VGhlR2FtZSA9ICgpID0+IHtcclxuICAgIGNvbXAucGxhY2VSYW5kb21TaGlwcygpO1xyXG5cclxuICAgIHBsYXllci5zZXRFbmVteUJvYXJkKGNvbXAucGxheWVyQm9hcmQpO1xyXG4gICAgY29tcC5zZXRFbmVteUJvYXJkKHBsYXllci5wbGF5ZXJCb2FyZCk7XHJcblxyXG4gICAgdXNlckludGVyZmFjZS5nZW5lcmF0ZUJvYXJkcyhwbGF5ZXIsIGNvbXAsIGdhbWVMb29wKTtcclxuICB9O1xyXG5cclxuICBjb25zdCBnYW1lTG9vcCA9IChwbGF5ZXJBdHRhY2tpbmcsIGVuZW15LCBjb29yZCwgY2IpID0+IHtcclxuICAgIGxldCBlbmVteUJvYXJkTmVpZ2hib3VycyA9IFtdO1xyXG4gICAgcGxheWVyQXR0YWNraW5nLmF0dGFjayhjb29yZCk7XHJcblxyXG4gICAgaWYgKFxyXG4gICAgICBwbGF5ZXJBdHRhY2tpbmcuZW5lbXlCb2FyZC5ib2FyZFtjb29yZFswXV1bY29vcmRbMV1dLmhhc1NoaXAgJiZcclxuICAgICAgcGxheWVyQXR0YWNraW5nLmVuZW15Qm9hcmQuYm9hcmRbY29vcmRbMF1dW2Nvb3JkWzFdXS5zaGlwLmlzU3VuaygpXHJcbiAgICApIHtcclxuICAgICAgZW5lbXlCb2FyZE5laWdoYm91cnMgPSBwbGF5ZXJBdHRhY2tpbmcuZW5lbXlCb2FyZC5nZXROZWlnaGJvdXJDb29yZGluYXRlcyhcclxuICAgICAgICBjb29yZCxcclxuICAgICAgICBwbGF5ZXJBdHRhY2tpbmcuZW5lbXlCb2FyZC5ib2FyZFtjb29yZFswXV1bY29vcmRbMV1dLnNoaXAuc2hpcExlbmd0aFxyXG4gICAgICApO1xyXG4gICAgfVxyXG5cclxuICAgIGNiKFwicGxheWVyXCIsIFwiY29tcFwiLCBjb29yZCwgZW5lbXlCb2FyZE5laWdoYm91cnMpO1xyXG5cclxuICAgIGlmIChwbGF5ZXJBdHRhY2tpbmcuZW5lbXlCb2FyZC5pc0FsbFNoaXBzU3VuaygpKSB7XHJcbiAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgIHVzZXJJbnRlcmZhY2UuZW5kVGhlR2FtZShcIldpblwiKTtcclxuICAgICAgfSwgNTAwKTtcclxuXHJcbiAgICAgIHJldHVybjtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgIGxldCBwbGF5ZXJCb2FyZE5laWdoYm91cnMgPSBbXTtcclxuICAgICAgICBjb25zdCBhdHRhY2tlZENvb3JkID0gZW5lbXkuYXR0YWNrKCk7XHJcbiAgICAgICAgY29uc3QgW3JvdywgY29sXSA9IGF0dGFja2VkQ29vcmQ7XHJcblxyXG4gICAgICAgIGlmIChcclxuICAgICAgICAgIGVuZW15LmVuZW15Qm9hcmQuYm9hcmRbcm93XVtjb2xdLmhhc1NoaXAgJiZcclxuICAgICAgICAgIGVuZW15LmVuZW15Qm9hcmQuYm9hcmRbcm93XVtjb2xdLnNoaXAuaXNTdW5rKClcclxuICAgICAgICApIHtcclxuICAgICAgICAgIHBsYXllckJvYXJkTmVpZ2hib3VycyA9IGVuZW15LmVuZW15Qm9hcmQuZ2V0TmVpZ2hib3VyQ29vcmRpbmF0ZXMoXHJcbiAgICAgICAgICAgIGF0dGFja2VkQ29vcmQsXHJcbiAgICAgICAgICAgIGVuZW15LmVuZW15Qm9hcmQuYm9hcmRbcm93XVtjb2xdLnNoaXAuc2hpcExlbmd0aFxyXG4gICAgICAgICAgKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGNiKFwiY29tcFwiLCBcInBsYXllclwiLCBhdHRhY2tlZENvb3JkLCBwbGF5ZXJCb2FyZE5laWdoYm91cnMpO1xyXG5cclxuICAgICAgICBpZiAoZW5lbXkuZW5lbXlCb2FyZC5pc0FsbFNoaXBzU3VuaygpKSB7XHJcbiAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgICAgICAgdXNlckludGVyZmFjZS5lbmRUaGVHYW1lKFwiTG9zZVwiKTtcclxuICAgICAgICAgIH0sIDUwMCk7XHJcbiAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICB9LCAxMDAwKTtcclxuICAgIH1cclxuICB9O1xyXG5cclxuICBjb25zdCByZW5kZXJVSSA9ICgpID0+IHtcclxuICAgIHVzZXJJbnRlcmZhY2UuZ2VuZXJhdGVVSShwbGF5ZXIsIGNvbXAsIHN0YXJ0VGhlR2FtZSk7XHJcbiAgfTtcclxuXHJcbiAgcmV0dXJuIHsgcmVuZGVyVUkgfTtcclxufTtcclxuXHJcbmNvbnN0IGdhbWUgPSBtYWluKCk7XHJcblxyXG5nYW1lLnJlbmRlclVJKCk7XHJcbiJdLCJuYW1lcyI6WyJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMF9fXyIsIlVSTCIsIl9fX0NTU19MT0FERVJfRVhQT1JUX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMF9fXyIsInB1c2giLCJtb2R1bGUiLCJpZCIsImV4cG9ydHMiLCJjc3NXaXRoTWFwcGluZ1RvU3RyaW5nIiwibGlzdCIsInRvU3RyaW5nIiwidGhpcyIsIm1hcCIsIml0ZW0iLCJjb250ZW50IiwibmVlZExheWVyIiwiY29uY2F0IiwibGVuZ3RoIiwiam9pbiIsImkiLCJtb2R1bGVzIiwibWVkaWEiLCJkZWR1cGUiLCJzdXBwb3J0cyIsImxheWVyIiwidW5kZWZpbmVkIiwiYWxyZWFkeUltcG9ydGVkTW9kdWxlcyIsImsiLCJfayIsInVybCIsIm9wdGlvbnMiLCJTdHJpbmciLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsInRlc3QiLCJzbGljZSIsImhhc2giLCJuZWVkUXVvdGVzIiwicmVwbGFjZSIsImNzc01hcHBpbmciLCJidG9hIiwiYmFzZTY0IiwidW5lc2NhcGUiLCJlbmNvZGVVUklDb21wb25lbnQiLCJKU09OIiwic3RyaW5naWZ5IiwiZGF0YSIsInNvdXJjZU1hcHBpbmciLCJzdHlsZXNJbkRPTSIsImdldEluZGV4QnlJZGVudGlmaWVyIiwiaWRlbnRpZmllciIsInJlc3VsdCIsIm1vZHVsZXNUb0RvbSIsImlkQ291bnRNYXAiLCJpZGVudGlmaWVycyIsImJhc2UiLCJjb3VudCIsImluZGV4QnlJZGVudGlmaWVyIiwib2JqIiwiY3NzIiwic291cmNlTWFwIiwicmVmZXJlbmNlcyIsInVwZGF0ZXIiLCJhZGRFbGVtZW50U3R5bGUiLCJieUluZGV4Iiwic3BsaWNlIiwiYXBpIiwiZG9tQVBJIiwidXBkYXRlIiwibmV3T2JqIiwicmVtb3ZlIiwibGFzdElkZW50aWZpZXJzIiwibmV3TGlzdCIsImluZGV4IiwibmV3TGFzdElkZW50aWZpZXJzIiwiX2kiLCJfaW5kZXgiLCJtZW1vIiwiaW5zZXJ0Iiwic3R5bGUiLCJ0YXJnZXQiLCJzdHlsZVRhcmdldCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsIndpbmRvdyIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudERvY3VtZW50IiwiaGVhZCIsImUiLCJnZXRUYXJnZXQiLCJFcnJvciIsImFwcGVuZENoaWxkIiwiZWxlbWVudCIsImNyZWF0ZUVsZW1lbnQiLCJzZXRBdHRyaWJ1dGVzIiwiYXR0cmlidXRlcyIsInN0eWxlRWxlbWVudCIsIm5vbmNlIiwic2V0QXR0cmlidXRlIiwiaW5zZXJ0U3R5bGVFbGVtZW50Iiwic3R5bGVUYWdUcmFuc2Zvcm0iLCJhcHBseSIsInBhcmVudE5vZGUiLCJyZW1vdmVDaGlsZCIsInJlbW92ZVN0eWxlRWxlbWVudCIsInN0eWxlU2hlZXQiLCJjc3NUZXh0IiwiZmlyc3RDaGlsZCIsImNyZWF0ZVRleHROb2RlIiwiX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiY2FjaGVkTW9kdWxlIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsIm0iLCJuIiwiZ2V0dGVyIiwiZCIsImEiLCJkZWZpbml0aW9uIiwia2V5IiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsImciLCJnbG9iYWxUaGlzIiwiRnVuY3Rpb24iLCJwcm9wIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwic2NyaXB0VXJsIiwiaW1wb3J0U2NyaXB0cyIsImxvY2F0aW9uIiwiY3VycmVudFNjcmlwdCIsInNyYyIsInNjcmlwdHMiLCJnZXRFbGVtZW50c0J5VGFnTmFtZSIsInAiLCJiIiwiYmFzZVVSSSIsInNlbGYiLCJocmVmIiwibmMiLCJib2R5IiwiY29uZmlndXJlVGhlUGxheWVyQm9hcmQiLCJwbGF5ZXIiLCJtYWluRGlzcGxheSIsImNvbmZpZyIsImNvbmZpZ0NvbnRyb2xzIiwic2hpcHNUb1BsYWNlIiwic3RhcnRCdG4iLCJjbGFzc0xpc3QiLCJhZGQiLCJyYW5kb21CdG4iLCJjbGVhckJ0biIsInRvZ2dsZUF0dHJpYnV0ZSIsInRleHRDb250ZW50IiwiYWRkRXZlbnRMaXN0ZW5lciIsInJlc2V0Qm9hcmQiLCJwbGFjZVJhbmRvbVNoaXBzIiwiaiIsInBsYXllckJvYXJkIiwiYm9hcmQiLCJoYXNTaGlwIiwiaGFzQXR0cmlidXRlIiwicmVtb3ZlQXR0cmlidXRlIiwiYXBwZW5kIiwicmVwbGFjZUNoaWxkcmVuIiwiYm9hcmROYW1lIiwiZW5lbXkiLCJnYW1lTG9vcCIsImlzQ2xpY2thYmxlIiwiYm9hcmRGaWVsZCIsImVuZW15Qm9hcmQiLCJ1cGRhdGVIaXR0ZW5GaWVsZCIsInBsYXllck5hbWUiLCJlbmVteU5hbWUiLCJjb29yZCIsIm5laWdoYm91cnMiLCJuZWlnaGJvdXIiLCJyb3ciLCJjb2wiLCJnZW5lcmF0ZVVJIiwiY29tcCIsInN0YXJ0VGhlR2FtZSIsImhlYWRlciIsIm1haW5IZWFkaW5nIiwibWFpbiIsImNvbnRyb2xsZXIiLCJyZXNldEJ0biIsImZvb3RlciIsImNvcHlyaWdodCIsImdlbmVyYXRlQm9hcmRzIiwiZW5kVGhlR2FtZSIsIndpbm5pbmdNZXNzYWdlIiwic2hpcHNPblRoZUJvYXJkIiwicGxhY2VWZXJ0aWNhbGx5IiwiZGVmYXVsdEJvYXJkIiwiaGl0dGVuIiwiZ2VuZXJhdGVCb2FyZCIsImdldE5laWdoYm91ckNvb3JkaW5hdGVzIiwic2hpcExlbmd0aCIsInNoaXBJbmRleCIsInBsYWNpbmdWZXJ0aWNhbGx5Iiwic2hpcE9uVmVydGljYWwiLCJyb3dPZmZzZXQiLCJjb2x1bW5PZmZzZXQiLCJtYWluQXhpcyIsImNyb3NzQXhpcyIsIk1hdGgiLCJhYnMiLCJnZXRTaGlwQ29vcmRpbmF0ZXMiLCJpc0FWYWxpZENvb3JkaW5hdGUiLCJldmVyeSIsImZpcnN0TmVpZ2hib3VyIiwic2Vjb25kTmVpZ2hib3VyIiwidGhpcmROZWlnaGJvdXIiLCJwbGFjZVNoaXAiLCJjb2x1bW4iLCJzaGlwIiwiaGl0cyIsImhpdCIsImlzU3VuayIsInN3aXRjaFNoaXBEaXJlY3Rpb24iLCJyZWNlaXZlQXR0YWNrIiwiaGl0U2hpcCIsImZsYXQiLCJmaWx0ZXIiLCJpc0FsbFNoaXBzU3VuayIsImNvb3JkaW5hdGUiLCJpc0NvbXAiLCJyYW5kb21Db29yZCIsImZsb29yIiwicmFuZG9tIiwic2V0RW5lbXlCb2FyZCIsImF0dGFjayIsImNvb3JkVG9BdHRhY2siLCJhdHRhY2tlZCIsInVzZXJJbnRlcmZhY2UiLCJwbGF5ZXJBdHRhY2tpbmciLCJjYiIsImVuZW15Qm9hcmROZWlnaGJvdXJzIiwic2V0VGltZW91dCIsInBsYXllckJvYXJkTmVpZ2hib3VycyIsImF0dGFja2VkQ29vcmQiLCJyZW5kZXJVSSJdLCJzb3VyY2VSb290IjoiIn0=